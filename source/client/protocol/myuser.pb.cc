// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: myuser.proto

#include "myuser.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace userspace {
PROTOBUF_CONSTEXPR UserId::UserId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_phone__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserIdDefaultTypeInternal() {}
  union {
    UserId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserIdDefaultTypeInternal _UserId_default_instance_;
PROTOBUF_CONSTEXPR OrderItem::OrderItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_name__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_price__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_description__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_number__)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderItemDefaultTypeInternal() {}
  union {
    OrderItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderItemDefaultTypeInternal _OrderItem_default_instance_;
PROTOBUF_CONSTEXPR OrderDetail::OrderDetail(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_info__)*/{}
  , /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_sender_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_receiver_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_start_address__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_end_address__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_money__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_time__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_status__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_description__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderDetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderDetailDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderDetailDefaultTypeInternal() {}
  union {
    OrderDetail _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderDetailDefaultTypeInternal _OrderDetail_default_instance_;
PROTOBUF_CONSTEXPR OrderList::OrderList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_sender_list__)*/{}
  , /*decltype(_impl_.order_receiver_list__)*/{}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderListDefaultTypeInternal() {}
  union {
    OrderList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderListDefaultTypeInternal _OrderList_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrderStateRequest::UpdateOrderStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_status__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateOrderStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrderStateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrderStateRequestDefaultTypeInternal() {}
  union {
    UpdateOrderStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrderStateRequestDefaultTypeInternal _UpdateOrderStateRequest_default_instance_;
PROTOBUF_CONSTEXPR BaseReply::BaseReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BaseReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseReplyDefaultTypeInternal() {}
  union {
    BaseReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseReplyDefaultTypeInternal _BaseReply_default_instance_;
PROTOBUF_CONSTEXPR OrderId::OrderId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderIdDefaultTypeInternal() {}
  union {
    OrderId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderIdDefaultTypeInternal _OrderId_default_instance_;
PROTOBUF_CONSTEXPR OrderTransport::OrderTransport(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transport_time__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transport_description__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderTransportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderTransportDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderTransportDefaultTypeInternal() {}
  union {
    OrderTransport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderTransportDefaultTypeInternal _OrderTransport_default_instance_;
PROTOBUF_CONSTEXPR SpecificOrder::SpecificOrder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transport_list__)*/{}
  , /*decltype(_impl_.item_list__)*/{}
  , /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SpecificOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecificOrderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecificOrderDefaultTypeInternal() {}
  union {
    SpecificOrder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecificOrderDefaultTypeInternal _SpecificOrder_default_instance_;
}  // namespace userspace
static ::_pb::Metadata file_level_metadata_myuser_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_myuser_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_myuser_2eproto = nullptr;

const uint32_t TableStruct_myuser_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::UserId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::UserId, _impl_.user_phone__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderItem, _impl_.item_id__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderItem, _impl_.item_name__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderItem, _impl_.item_price__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderItem, _impl_.item_description__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderItem, _impl_.item_number__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_id__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_sender_id__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_receiver_id__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_start_address__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_end_address__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_money__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_time__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_status__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.order_description__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderDetail, _impl_.item_info__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderList, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderList, _impl_.order_sender_list__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderList, _impl_.order_receiver_list__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::UpdateOrderStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::UpdateOrderStateRequest, _impl_.order_id__),
  PROTOBUF_FIELD_OFFSET(::userspace::UpdateOrderStateRequest, _impl_.order_status__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::BaseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::BaseReply, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::userspace::BaseReply, _impl_.return_message__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderId, _impl_.order_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderTransport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::OrderTransport, _impl_.transport_time__),
  PROTOBUF_FIELD_OFFSET(::userspace::OrderTransport, _impl_.transport_description__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::userspace::SpecificOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::userspace::SpecificOrder, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::userspace::SpecificOrder, _impl_.return_message__),
  PROTOBUF_FIELD_OFFSET(::userspace::SpecificOrder, _impl_.transport_list__),
  PROTOBUF_FIELD_OFFSET(::userspace::SpecificOrder, _impl_.item_list__),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::userspace::UserId)},
  { 7, -1, -1, sizeof(::userspace::OrderItem)},
  { 18, -1, -1, sizeof(::userspace::OrderDetail)},
  { 34, -1, -1, sizeof(::userspace::OrderList)},
  { 43, -1, -1, sizeof(::userspace::UpdateOrderStateRequest)},
  { 51, -1, -1, sizeof(::userspace::BaseReply)},
  { 59, -1, -1, sizeof(::userspace::OrderId)},
  { 66, -1, -1, sizeof(::userspace::OrderTransport)},
  { 74, -1, -1, sizeof(::userspace::SpecificOrder)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::userspace::_UserId_default_instance_._instance,
  &::userspace::_OrderItem_default_instance_._instance,
  &::userspace::_OrderDetail_default_instance_._instance,
  &::userspace::_OrderList_default_instance_._instance,
  &::userspace::_UpdateOrderStateRequest_default_instance_._instance,
  &::userspace::_BaseReply_default_instance_._instance,
  &::userspace::_OrderId_default_instance_._instance,
  &::userspace::_OrderTransport_default_instance_._instance,
  &::userspace::_SpecificOrder_default_instance_._instance,
};

const char descriptor_table_protodef_myuser_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014myuser.proto\022\tuserspace\"\035\n\006UserId\022\023\n\013u"
  "ser_phone_\030\001 \001(\t\"w\n\tOrderItem\022\020\n\010item_id"
  "_\030\001 \001(\t\022\022\n\nitem_name_\030\002 \001(\t\022\023\n\013item_pric"
  "e_\030\003 \001(\t\022\031\n\021item_description_\030\004 \001(\t\022\024\n\014i"
  "tem_number_\030\005 \001(\005\"\230\002\n\013OrderDetail\022\021\n\tord"
  "er_id_\030\001 \001(\t\022\030\n\020order_sender_id_\030\002 \001(\t\022\032"
  "\n\022order_receiver_id_\030\003 \001(\t\022\034\n\024order_star"
  "t_address_\030\004 \001(\t\022\032\n\022order_end_address_\030\005"
  " \001(\t\022\024\n\014order_money_\030\006 \001(\t\022\023\n\013order_time"
  "_\030\007 \001(\t\022\025\n\rorder_status_\030\010 \001(\t\022\032\n\022order_"
  "description_\030\t \001(\t\022(\n\nitem_info_\030\n \003(\0132\024"
  ".userspace.OrderItem\"\215\001\n\tOrderList\022\026\n\016re"
  "turn_result_\030\001 \001(\010\0222\n\022order_sender_list_"
  "\030\002 \003(\0132\026.userspace.OrderDetail\0224\n\024order_"
  "receiver_list_\030\003 \003(\0132\026.userspace.OrderDe"
  "tail\"C\n\027UpdateOrderStateRequest\022\021\n\torder"
  "_id_\030\001 \001(\t\022\025\n\rorder_status_\030\002 \001(\t\"<\n\tBas"
  "eReply\022\026\n\016return_result_\030\001 \001(\010\022\027\n\017return"
  "_message_\030\002 \001(\t\"\034\n\007OrderId\022\021\n\torder_id_\030"
  "\001 \001(\t\"I\n\016OrderTransport\022\027\n\017transport_tim"
  "e_\030\001 \001(\t\022\036\n\026transport_description_\030\002 \001(\t"
  "\"\236\001\n\rSpecificOrder\022\026\n\016return_result_\030\001 \001"
  "(\010\022\027\n\017return_message_\030\002 \001(\t\0222\n\017transport"
  "_list_\030\003 \003(\0132\031.userspace.OrderTransport\022"
  "(\n\nitem_list_\030\004 \003(\0132\024.userspace.OrderIte"
  "m2\221\002\n\tUserOrder\0227\n\014GetOrderList\022\021.usersp"
  "ace.UserId\032\024.userspace.OrderList\022@\n\020GetS"
  "pecificOrder\022\022.userspace.OrderId\032\030.users"
  "pace.SpecificOrder\022;\n\013CreateOrder\022\026.user"
  "space.OrderDetail\032\024.userspace.BaseReply\022"
  "L\n\020UpdateOrderState\022\".userspace.UpdateOr"
  "derStateRequest\032\024.userspace.BaseReplyb\006p"
  "roto3"
  ;
static ::_pbi::once_flag descriptor_table_myuser_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_myuser_2eproto = {
    false, false, 1285, descriptor_table_protodef_myuser_2eproto,
    "myuser.proto",
    &descriptor_table_myuser_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_myuser_2eproto::offsets,
    file_level_metadata_myuser_2eproto, file_level_enum_descriptors_myuser_2eproto,
    file_level_service_descriptors_myuser_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_myuser_2eproto_getter() {
  return &descriptor_table_myuser_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_myuser_2eproto(&descriptor_table_myuser_2eproto);
namespace userspace {

// ===================================================================

class UserId::_Internal {
 public:
};

UserId::UserId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.UserId)
}
UserId::UserId(const UserId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_phone__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_phone__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_phone__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_phone_().empty()) {
    _this->_impl_.user_phone__.Set(from._internal_user_phone_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:userspace.UserId)
}

inline void UserId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_phone__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_phone__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_phone__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserId::~UserId() {
  // @@protoc_insertion_point(destructor:userspace.UserId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_phone__.Destroy();
}

void UserId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserId::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.UserId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_phone__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_phone_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_phone_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.UserId.user_phone_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.UserId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_phone_ = 1;
  if (!this->_internal_user_phone_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_phone_().data(), static_cast<int>(this->_internal_user_phone_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.UserId.user_phone_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_phone_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.UserId)
  return target;
}

size_t UserId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.UserId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_phone_ = 1;
  if (!this->_internal_user_phone_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_phone_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserId::GetClassData() const { return &_class_data_; }


void UserId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserId*>(&to_msg);
  auto& from = static_cast<const UserId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.UserId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_phone_().empty()) {
    _this->_internal_set_user_phone_(from._internal_user_phone_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserId::CopyFrom(const UserId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.UserId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserId::IsInitialized() const {
  return true;
}

void UserId::InternalSwap(UserId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_phone__, lhs_arena,
      &other->_impl_.user_phone__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[0]);
}

// ===================================================================

class OrderItem::_Internal {
 public:
};

OrderItem::OrderItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.OrderItem)
}
OrderItem::OrderItem(const OrderItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id__){}
    , decltype(_impl_.item_name__){}
    , decltype(_impl_.item_price__){}
    , decltype(_impl_.item_description__){}
    , decltype(_impl_.item_number__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.item_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id_().empty()) {
    _this->_impl_.item_id__.Set(from._internal_item_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_name__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_name__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_name_().empty()) {
    _this->_impl_.item_name__.Set(from._internal_item_name_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_price__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_price__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_price_().empty()) {
    _this->_impl_.item_price__.Set(from._internal_item_price_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_description_().empty()) {
    _this->_impl_.item_description__.Set(from._internal_item_description_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.item_number__ = from._impl_.item_number__;
  // @@protoc_insertion_point(copy_constructor:userspace.OrderItem)
}

inline void OrderItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id__){}
    , decltype(_impl_.item_name__){}
    , decltype(_impl_.item_price__){}
    , decltype(_impl_.item_description__){}
    , decltype(_impl_.item_number__){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.item_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_name__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_name__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_price__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_price__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrderItem::~OrderItem() {
  // @@protoc_insertion_point(destructor:userspace.OrderItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_id__.Destroy();
  _impl_.item_name__.Destroy();
  _impl_.item_price__.Destroy();
  _impl_.item_description__.Destroy();
}

void OrderItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderItem::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.OrderItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id__.ClearToEmpty();
  _impl_.item_name__.ClearToEmpty();
  _impl_.item_price__.ClearToEmpty();
  _impl_.item_description__.ClearToEmpty();
  _impl_.item_number__ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderItem.item_id_"));
        } else
          goto handle_unusual;
        continue;
      // string item_name_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_name_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderItem.item_name_"));
        } else
          goto handle_unusual;
        continue;
      // string item_price_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_item_price_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderItem.item_price_"));
        } else
          goto handle_unusual;
        continue;
      // string item_description_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_item_description_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderItem.item_description_"));
        } else
          goto handle_unusual;
        continue;
      // int32 item_number_ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.item_number__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.OrderItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id_ = 1;
  if (!this->_internal_item_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id_().data(), static_cast<int>(this->_internal_item_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderItem.item_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id_(), target);
  }

  // string item_name_ = 2;
  if (!this->_internal_item_name_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_name_().data(), static_cast<int>(this->_internal_item_name_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderItem.item_name_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_name_(), target);
  }

  // string item_price_ = 3;
  if (!this->_internal_item_price_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_price_().data(), static_cast<int>(this->_internal_item_price_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderItem.item_price_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_item_price_(), target);
  }

  // string item_description_ = 4;
  if (!this->_internal_item_description_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_description_().data(), static_cast<int>(this->_internal_item_description_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderItem.item_description_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_item_description_(), target);
  }

  // int32 item_number_ = 5;
  if (this->_internal_item_number_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_item_number_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.OrderItem)
  return target;
}

size_t OrderItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.OrderItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id_ = 1;
  if (!this->_internal_item_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id_());
  }

  // string item_name_ = 2;
  if (!this->_internal_item_name_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_name_());
  }

  // string item_price_ = 3;
  if (!this->_internal_item_price_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_price_());
  }

  // string item_description_ = 4;
  if (!this->_internal_item_description_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_description_());
  }

  // int32 item_number_ = 5;
  if (this->_internal_item_number_() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_number_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderItem::GetClassData() const { return &_class_data_; }


void OrderItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderItem*>(&to_msg);
  auto& from = static_cast<const OrderItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.OrderItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id_().empty()) {
    _this->_internal_set_item_id_(from._internal_item_id_());
  }
  if (!from._internal_item_name_().empty()) {
    _this->_internal_set_item_name_(from._internal_item_name_());
  }
  if (!from._internal_item_price_().empty()) {
    _this->_internal_set_item_price_(from._internal_item_price_());
  }
  if (!from._internal_item_description_().empty()) {
    _this->_internal_set_item_description_(from._internal_item_description_());
  }
  if (from._internal_item_number_() != 0) {
    _this->_internal_set_item_number_(from._internal_item_number_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderItem::CopyFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderItem::IsInitialized() const {
  return true;
}

void OrderItem::InternalSwap(OrderItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_id__, lhs_arena,
      &other->_impl_.item_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_name__, lhs_arena,
      &other->_impl_.item_name__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_price__, lhs_arena,
      &other->_impl_.item_price__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_description__, lhs_arena,
      &other->_impl_.item_description__, rhs_arena
  );
  swap(_impl_.item_number__, other->_impl_.item_number__);
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[1]);
}

// ===================================================================

class OrderDetail::_Internal {
 public:
};

OrderDetail::OrderDetail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.OrderDetail)
}
OrderDetail::OrderDetail(const OrderDetail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderDetail* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_info__){from._impl_.item_info__}
    , decltype(_impl_.order_id__){}
    , decltype(_impl_.order_sender_id__){}
    , decltype(_impl_.order_receiver_id__){}
    , decltype(_impl_.order_start_address__){}
    , decltype(_impl_.order_end_address__){}
    , decltype(_impl_.order_money__){}
    , decltype(_impl_.order_time__){}
    , decltype(_impl_.order_status__){}
    , decltype(_impl_.order_description__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_sender_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_sender_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_sender_id_().empty()) {
    _this->_impl_.order_sender_id__.Set(from._internal_order_sender_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_receiver_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_receiver_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_receiver_id_().empty()) {
    _this->_impl_.order_receiver_id__.Set(from._internal_order_receiver_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_start_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_start_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_start_address_().empty()) {
    _this->_impl_.order_start_address__.Set(from._internal_order_start_address_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_end_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_end_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_end_address_().empty()) {
    _this->_impl_.order_end_address__.Set(from._internal_order_end_address_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_money__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_money__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_money_().empty()) {
    _this->_impl_.order_money__.Set(from._internal_order_money_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_time_().empty()) {
    _this->_impl_.order_time__.Set(from._internal_order_time_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_status__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_status__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_status_().empty()) {
    _this->_impl_.order_status__.Set(from._internal_order_status_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_description_().empty()) {
    _this->_impl_.order_description__.Set(from._internal_order_description_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:userspace.OrderDetail)
}

inline void OrderDetail::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_info__){arena}
    , decltype(_impl_.order_id__){}
    , decltype(_impl_.order_sender_id__){}
    , decltype(_impl_.order_receiver_id__){}
    , decltype(_impl_.order_start_address__){}
    , decltype(_impl_.order_end_address__){}
    , decltype(_impl_.order_money__){}
    , decltype(_impl_.order_time__){}
    , decltype(_impl_.order_status__){}
    , decltype(_impl_.order_description__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_sender_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_sender_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_receiver_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_receiver_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_start_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_start_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_end_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_end_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_money__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_money__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_status__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_status__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrderDetail::~OrderDetail() {
  // @@protoc_insertion_point(destructor:userspace.OrderDetail)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderDetail::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_info__.~RepeatedPtrField();
  _impl_.order_id__.Destroy();
  _impl_.order_sender_id__.Destroy();
  _impl_.order_receiver_id__.Destroy();
  _impl_.order_start_address__.Destroy();
  _impl_.order_end_address__.Destroy();
  _impl_.order_money__.Destroy();
  _impl_.order_time__.Destroy();
  _impl_.order_status__.Destroy();
  _impl_.order_description__.Destroy();
}

void OrderDetail::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.OrderDetail)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_info__.Clear();
  _impl_.order_id__.ClearToEmpty();
  _impl_.order_sender_id__.ClearToEmpty();
  _impl_.order_receiver_id__.ClearToEmpty();
  _impl_.order_start_address__.ClearToEmpty();
  _impl_.order_end_address__.ClearToEmpty();
  _impl_.order_money__.ClearToEmpty();
  _impl_.order_time__.ClearToEmpty();
  _impl_.order_status__.ClearToEmpty();
  _impl_.order_description__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderDetail::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string order_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_sender_id_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_order_sender_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_sender_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_receiver_id_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_order_receiver_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_receiver_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_start_address_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_order_start_address_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_start_address_"));
        } else
          goto handle_unusual;
        continue;
      // string order_end_address_ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_order_end_address_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_end_address_"));
        } else
          goto handle_unusual;
        continue;
      // string order_money_ = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_order_money_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_money_"));
        } else
          goto handle_unusual;
        continue;
      // string order_time_ = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_order_time_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_time_"));
        } else
          goto handle_unusual;
        continue;
      // string order_status_ = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_order_status_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_status_"));
        } else
          goto handle_unusual;
        continue;
      // string order_description_ = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_order_description_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderDetail.order_description_"));
        } else
          goto handle_unusual;
        continue;
      // repeated .userspace.OrderItem item_info_ = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item_info_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderDetail::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.OrderDetail)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id_(), target);
  }

  // string order_sender_id_ = 2;
  if (!this->_internal_order_sender_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_sender_id_().data(), static_cast<int>(this->_internal_order_sender_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_sender_id_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_order_sender_id_(), target);
  }

  // string order_receiver_id_ = 3;
  if (!this->_internal_order_receiver_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_receiver_id_().data(), static_cast<int>(this->_internal_order_receiver_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_receiver_id_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_order_receiver_id_(), target);
  }

  // string order_start_address_ = 4;
  if (!this->_internal_order_start_address_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_start_address_().data(), static_cast<int>(this->_internal_order_start_address_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_start_address_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_order_start_address_(), target);
  }

  // string order_end_address_ = 5;
  if (!this->_internal_order_end_address_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_end_address_().data(), static_cast<int>(this->_internal_order_end_address_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_end_address_");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_order_end_address_(), target);
  }

  // string order_money_ = 6;
  if (!this->_internal_order_money_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_money_().data(), static_cast<int>(this->_internal_order_money_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_money_");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_order_money_(), target);
  }

  // string order_time_ = 7;
  if (!this->_internal_order_time_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_time_().data(), static_cast<int>(this->_internal_order_time_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_time_");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_order_time_(), target);
  }

  // string order_status_ = 8;
  if (!this->_internal_order_status_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_status_().data(), static_cast<int>(this->_internal_order_status_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_status_");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_order_status_(), target);
  }

  // string order_description_ = 9;
  if (!this->_internal_order_description_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_description_().data(), static_cast<int>(this->_internal_order_description_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderDetail.order_description_");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_order_description_(), target);
  }

  // repeated .userspace.OrderItem item_info_ = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_info__size()); i < n; i++) {
    const auto& repfield = this->_internal_item_info_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.OrderDetail)
  return target;
}

size_t OrderDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.OrderDetail)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userspace.OrderItem item_info_ = 10;
  total_size += 1UL * this->_internal_item_info__size();
  for (const auto& msg : this->_impl_.item_info__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  // string order_sender_id_ = 2;
  if (!this->_internal_order_sender_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_sender_id_());
  }

  // string order_receiver_id_ = 3;
  if (!this->_internal_order_receiver_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_receiver_id_());
  }

  // string order_start_address_ = 4;
  if (!this->_internal_order_start_address_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_start_address_());
  }

  // string order_end_address_ = 5;
  if (!this->_internal_order_end_address_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_end_address_());
  }

  // string order_money_ = 6;
  if (!this->_internal_order_money_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_money_());
  }

  // string order_time_ = 7;
  if (!this->_internal_order_time_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_time_());
  }

  // string order_status_ = 8;
  if (!this->_internal_order_status_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_status_());
  }

  // string order_description_ = 9;
  if (!this->_internal_order_description_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_description_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderDetail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderDetail::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderDetail::GetClassData() const { return &_class_data_; }


void OrderDetail::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderDetail*>(&to_msg);
  auto& from = static_cast<const OrderDetail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.OrderDetail)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_info__.MergeFrom(from._impl_.item_info__);
  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  if (!from._internal_order_sender_id_().empty()) {
    _this->_internal_set_order_sender_id_(from._internal_order_sender_id_());
  }
  if (!from._internal_order_receiver_id_().empty()) {
    _this->_internal_set_order_receiver_id_(from._internal_order_receiver_id_());
  }
  if (!from._internal_order_start_address_().empty()) {
    _this->_internal_set_order_start_address_(from._internal_order_start_address_());
  }
  if (!from._internal_order_end_address_().empty()) {
    _this->_internal_set_order_end_address_(from._internal_order_end_address_());
  }
  if (!from._internal_order_money_().empty()) {
    _this->_internal_set_order_money_(from._internal_order_money_());
  }
  if (!from._internal_order_time_().empty()) {
    _this->_internal_set_order_time_(from._internal_order_time_());
  }
  if (!from._internal_order_status_().empty()) {
    _this->_internal_set_order_status_(from._internal_order_status_());
  }
  if (!from._internal_order_description_().empty()) {
    _this->_internal_set_order_description_(from._internal_order_description_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderDetail::CopyFrom(const OrderDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.OrderDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDetail::IsInitialized() const {
  return true;
}

void OrderDetail::InternalSwap(OrderDetail* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_info__.InternalSwap(&other->_impl_.item_info__);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_sender_id__, lhs_arena,
      &other->_impl_.order_sender_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_receiver_id__, lhs_arena,
      &other->_impl_.order_receiver_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_start_address__, lhs_arena,
      &other->_impl_.order_start_address__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_end_address__, lhs_arena,
      &other->_impl_.order_end_address__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_money__, lhs_arena,
      &other->_impl_.order_money__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_time__, lhs_arena,
      &other->_impl_.order_time__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_status__, lhs_arena,
      &other->_impl_.order_status__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_description__, lhs_arena,
      &other->_impl_.order_description__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderDetail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[2]);
}

// ===================================================================

class OrderList::_Internal {
 public:
};

OrderList::OrderList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.OrderList)
}
OrderList::OrderList(const OrderList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_sender_list__){from._impl_.order_sender_list__}
    , decltype(_impl_.order_receiver_list__){from._impl_.order_receiver_list__}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:userspace.OrderList)
}

inline void OrderList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_sender_list__){arena}
    , decltype(_impl_.order_receiver_list__){arena}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OrderList::~OrderList() {
  // @@protoc_insertion_point(destructor:userspace.OrderList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_sender_list__.~RepeatedPtrField();
  _impl_.order_receiver_list__.~RepeatedPtrField();
}

void OrderList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderList::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.OrderList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_sender_list__.Clear();
  _impl_.order_receiver_list__.Clear();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .userspace.OrderDetail order_sender_list_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_order_sender_list_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .userspace.OrderDetail order_receiver_list_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_order_receiver_list_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.OrderList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // repeated .userspace.OrderDetail order_sender_list_ = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_order_sender_list__size()); i < n; i++) {
    const auto& repfield = this->_internal_order_sender_list_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .userspace.OrderDetail order_receiver_list_ = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_order_receiver_list__size()); i < n; i++) {
    const auto& repfield = this->_internal_order_receiver_list_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.OrderList)
  return target;
}

size_t OrderList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.OrderList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userspace.OrderDetail order_sender_list_ = 2;
  total_size += 1UL * this->_internal_order_sender_list__size();
  for (const auto& msg : this->_impl_.order_sender_list__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .userspace.OrderDetail order_receiver_list_ = 3;
  total_size += 1UL * this->_internal_order_receiver_list__size();
  for (const auto& msg : this->_impl_.order_receiver_list__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderList::GetClassData() const { return &_class_data_; }


void OrderList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderList*>(&to_msg);
  auto& from = static_cast<const OrderList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.OrderList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.order_sender_list__.MergeFrom(from._impl_.order_sender_list__);
  _this->_impl_.order_receiver_list__.MergeFrom(from._impl_.order_receiver_list__);
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderList::CopyFrom(const OrderList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderList::IsInitialized() const {
  return true;
}

void OrderList::InternalSwap(OrderList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.order_sender_list__.InternalSwap(&other->_impl_.order_sender_list__);
  _impl_.order_receiver_list__.InternalSwap(&other->_impl_.order_receiver_list__);
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[3]);
}

// ===================================================================

class UpdateOrderStateRequest::_Internal {
 public:
};

UpdateOrderStateRequest::UpdateOrderStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.UpdateOrderStateRequest)
}
UpdateOrderStateRequest::UpdateOrderStateRequest(const UpdateOrderStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateOrderStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , decltype(_impl_.order_status__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_status__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_status__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_status_().empty()) {
    _this->_impl_.order_status__.Set(from._internal_order_status_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:userspace.UpdateOrderStateRequest)
}

inline void UpdateOrderStateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , decltype(_impl_.order_status__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_status__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_status__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateOrderStateRequest::~UpdateOrderStateRequest() {
  // @@protoc_insertion_point(destructor:userspace.UpdateOrderStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrderStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_id__.Destroy();
  _impl_.order_status__.Destroy();
}

void UpdateOrderStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateOrderStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.UpdateOrderStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id__.ClearToEmpty();
  _impl_.order_status__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrderStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string order_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.UpdateOrderStateRequest.order_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_status_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_order_status_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.UpdateOrderStateRequest.order_status_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrderStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.UpdateOrderStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.UpdateOrderStateRequest.order_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id_(), target);
  }

  // string order_status_ = 2;
  if (!this->_internal_order_status_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_status_().data(), static_cast<int>(this->_internal_order_status_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.UpdateOrderStateRequest.order_status_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_order_status_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.UpdateOrderStateRequest)
  return target;
}

size_t UpdateOrderStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.UpdateOrderStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  // string order_status_ = 2;
  if (!this->_internal_order_status_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_status_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrderStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateOrderStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrderStateRequest::GetClassData() const { return &_class_data_; }


void UpdateOrderStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateOrderStateRequest*>(&to_msg);
  auto& from = static_cast<const UpdateOrderStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.UpdateOrderStateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  if (!from._internal_order_status_().empty()) {
    _this->_internal_set_order_status_(from._internal_order_status_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrderStateRequest::CopyFrom(const UpdateOrderStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.UpdateOrderStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrderStateRequest::IsInitialized() const {
  return true;
}

void UpdateOrderStateRequest::InternalSwap(UpdateOrderStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_status__, lhs_arena,
      &other->_impl_.order_status__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrderStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[4]);
}

// ===================================================================

class BaseReply::_Internal {
 public:
};

BaseReply::BaseReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.BaseReply)
}
BaseReply::BaseReply(const BaseReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:userspace.BaseReply)
}

inline void BaseReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BaseReply::~BaseReply() {
  // @@protoc_insertion_point(destructor:userspace.BaseReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.return_message__.Destroy();
}

void BaseReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.BaseReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.BaseReply.return_message_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.BaseReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.BaseReply.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.BaseReply)
  return target;
}

size_t BaseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.BaseReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseReply::GetClassData() const { return &_class_data_; }


void BaseReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseReply*>(&to_msg);
  auto& from = static_cast<const BaseReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.BaseReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseReply::CopyFrom(const BaseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.BaseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseReply::IsInitialized() const {
  return true;
}

void BaseReply::InternalSwap(BaseReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[5]);
}

// ===================================================================

class OrderId::_Internal {
 public:
};

OrderId::OrderId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.OrderId)
}
OrderId::OrderId(const OrderId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:userspace.OrderId)
}

inline void OrderId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrderId::~OrderId() {
  // @@protoc_insertion_point(destructor:userspace.OrderId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_id__.Destroy();
}

void OrderId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderId::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.OrderId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string order_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderId.order_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.OrderId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderId.order_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.OrderId)
  return target;
}

size_t OrderId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.OrderId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderId::GetClassData() const { return &_class_data_; }


void OrderId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderId*>(&to_msg);
  auto& from = static_cast<const OrderId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.OrderId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderId::CopyFrom(const OrderId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.OrderId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderId::IsInitialized() const {
  return true;
}

void OrderId::InternalSwap(OrderId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[6]);
}

// ===================================================================

class OrderTransport::_Internal {
 public:
};

OrderTransport::OrderTransport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.OrderTransport)
}
OrderTransport::OrderTransport(const OrderTransport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderTransport* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transport_time__){}
    , decltype(_impl_.transport_description__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.transport_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.transport_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transport_time_().empty()) {
    _this->_impl_.transport_time__.Set(from._internal_transport_time_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.transport_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.transport_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transport_description_().empty()) {
    _this->_impl_.transport_description__.Set(from._internal_transport_description_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:userspace.OrderTransport)
}

inline void OrderTransport::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.transport_time__){}
    , decltype(_impl_.transport_description__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.transport_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.transport_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.transport_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.transport_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrderTransport::~OrderTransport() {
  // @@protoc_insertion_point(destructor:userspace.OrderTransport)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderTransport::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transport_time__.Destroy();
  _impl_.transport_description__.Destroy();
}

void OrderTransport::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderTransport::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.OrderTransport)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transport_time__.ClearToEmpty();
  _impl_.transport_description__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderTransport::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transport_time_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transport_time_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderTransport.transport_time_"));
        } else
          goto handle_unusual;
        continue;
      // string transport_description_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_transport_description_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.OrderTransport.transport_description_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderTransport::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.OrderTransport)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transport_time_ = 1;
  if (!this->_internal_transport_time_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transport_time_().data(), static_cast<int>(this->_internal_transport_time_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderTransport.transport_time_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transport_time_(), target);
  }

  // string transport_description_ = 2;
  if (!this->_internal_transport_description_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transport_description_().data(), static_cast<int>(this->_internal_transport_description_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.OrderTransport.transport_description_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_transport_description_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.OrderTransport)
  return target;
}

size_t OrderTransport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.OrderTransport)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transport_time_ = 1;
  if (!this->_internal_transport_time_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transport_time_());
  }

  // string transport_description_ = 2;
  if (!this->_internal_transport_description_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transport_description_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderTransport::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderTransport::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderTransport::GetClassData() const { return &_class_data_; }


void OrderTransport::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderTransport*>(&to_msg);
  auto& from = static_cast<const OrderTransport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.OrderTransport)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transport_time_().empty()) {
    _this->_internal_set_transport_time_(from._internal_transport_time_());
  }
  if (!from._internal_transport_description_().empty()) {
    _this->_internal_set_transport_description_(from._internal_transport_description_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderTransport::CopyFrom(const OrderTransport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.OrderTransport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderTransport::IsInitialized() const {
  return true;
}

void OrderTransport::InternalSwap(OrderTransport* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.transport_time__, lhs_arena,
      &other->_impl_.transport_time__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.transport_description__, lhs_arena,
      &other->_impl_.transport_description__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderTransport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[7]);
}

// ===================================================================

class SpecificOrder::_Internal {
 public:
};

SpecificOrder::SpecificOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:userspace.SpecificOrder)
}
SpecificOrder::SpecificOrder(const SpecificOrder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecificOrder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transport_list__){from._impl_.transport_list__}
    , decltype(_impl_.item_list__){from._impl_.item_list__}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:userspace.SpecificOrder)
}

inline void SpecificOrder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.transport_list__){arena}
    , decltype(_impl_.item_list__){arena}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SpecificOrder::~SpecificOrder() {
  // @@protoc_insertion_point(destructor:userspace.SpecificOrder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecificOrder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transport_list__.~RepeatedPtrField();
  _impl_.item_list__.~RepeatedPtrField();
  _impl_.return_message__.Destroy();
}

void SpecificOrder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecificOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:userspace.SpecificOrder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transport_list__.Clear();
  _impl_.item_list__.Clear();
  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecificOrder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "userspace.SpecificOrder.return_message_"));
        } else
          goto handle_unusual;
        continue;
      // repeated .userspace.OrderTransport transport_list_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transport_list_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .userspace.OrderItem item_list_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item_list_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecificOrder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:userspace.SpecificOrder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "userspace.SpecificOrder.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  // repeated .userspace.OrderTransport transport_list_ = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transport_list__size()); i < n; i++) {
    const auto& repfield = this->_internal_transport_list_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .userspace.OrderItem item_list_ = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_list__size()); i < n; i++) {
    const auto& repfield = this->_internal_item_list_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userspace.SpecificOrder)
  return target;
}

size_t SpecificOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userspace.SpecificOrder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .userspace.OrderTransport transport_list_ = 3;
  total_size += 1UL * this->_internal_transport_list__size();
  for (const auto& msg : this->_impl_.transport_list__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .userspace.OrderItem item_list_ = 4;
  total_size += 1UL * this->_internal_item_list__size();
  for (const auto& msg : this->_impl_.item_list__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecificOrder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecificOrder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecificOrder::GetClassData() const { return &_class_data_; }


void SpecificOrder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecificOrder*>(&to_msg);
  auto& from = static_cast<const SpecificOrder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:userspace.SpecificOrder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.transport_list__.MergeFrom(from._impl_.transport_list__);
  _this->_impl_.item_list__.MergeFrom(from._impl_.item_list__);
  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecificOrder::CopyFrom(const SpecificOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userspace.SpecificOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecificOrder::IsInitialized() const {
  return true;
}

void SpecificOrder::InternalSwap(SpecificOrder* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transport_list__.InternalSwap(&other->_impl_.transport_list__);
  _impl_.item_list__.InternalSwap(&other->_impl_.item_list__);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecificOrder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myuser_2eproto_getter, &descriptor_table_myuser_2eproto_once,
      file_level_metadata_myuser_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace userspace
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::userspace::UserId*
Arena::CreateMaybeMessage< ::userspace::UserId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::UserId >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::OrderItem*
Arena::CreateMaybeMessage< ::userspace::OrderItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::OrderItem >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::OrderDetail*
Arena::CreateMaybeMessage< ::userspace::OrderDetail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::OrderDetail >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::OrderList*
Arena::CreateMaybeMessage< ::userspace::OrderList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::OrderList >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::UpdateOrderStateRequest*
Arena::CreateMaybeMessage< ::userspace::UpdateOrderStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::UpdateOrderStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::BaseReply*
Arena::CreateMaybeMessage< ::userspace::BaseReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::BaseReply >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::OrderId*
Arena::CreateMaybeMessage< ::userspace::OrderId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::OrderId >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::OrderTransport*
Arena::CreateMaybeMessage< ::userspace::OrderTransport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::OrderTransport >(arena);
}
template<> PROTOBUF_NOINLINE ::userspace::SpecificOrder*
Arena::CreateMaybeMessage< ::userspace::SpecificOrder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::userspace::SpecificOrder >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
