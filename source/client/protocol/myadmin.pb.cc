// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: myadmin.proto

#include "myadmin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace adminspace {
PROTOBUF_CONSTEXPR AdminId::AdminId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.admin_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AdminIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdminIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdminIdDefaultTypeInternal() {}
  union {
    AdminId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdminIdDefaultTypeInternal _AdminId_default_instance_;
PROTOBUF_CONSTEXPR ItemInfo::ItemInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_name__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_price__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_description__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.admin_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ItemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemInfoDefaultTypeInternal() {}
  union {
    ItemInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemInfoDefaultTypeInternal _ItemInfo_default_instance_;
PROTOBUF_CONSTEXPR AllItemList::AllItemList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_info__)*/{}
  , /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllItemListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllItemListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllItemListDefaultTypeInternal() {}
  union {
    AllItemList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllItemListDefaultTypeInternal _AllItemList_default_instance_;
PROTOBUF_CONSTEXPR StationInfo::StationInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.station_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.station_name__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.station_position__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.station_description__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.admin_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StationInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StationInfoDefaultTypeInternal() {}
  union {
    StationInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StationInfoDefaultTypeInternal _StationInfo_default_instance_;
PROTOBUF_CONSTEXPR AllStationList::AllStationList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.station_info__)*/{}
  , /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllStationListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllStationListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllStationListDefaultTypeInternal() {}
  union {
    AllStationList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllStationListDefaultTypeInternal _AllStationList_default_instance_;
PROTOBUF_CONSTEXPR OrderInfo::OrderInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_sender_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_receiver_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_start_address__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_end_address__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_money__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_time__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_status__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_description__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.admin_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderInfoDefaultTypeInternal() {}
  union {
    OrderInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderInfoDefaultTypeInternal _OrderInfo_default_instance_;
PROTOBUF_CONSTEXPR AllOrderList::AllOrderList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_info__)*/{}
  , /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllOrderListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllOrderListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllOrderListDefaultTypeInternal() {}
  union {
    AllOrderList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllOrderListDefaultTypeInternal _AllOrderList_default_instance_;
PROTOBUF_CONSTEXPR BaseReply3::BaseReply3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BaseReply3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseReply3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseReply3DefaultTypeInternal() {}
  union {
    BaseReply3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseReply3DefaultTypeInternal _BaseReply3_default_instance_;
}  // namespace adminspace
static ::_pb::Metadata file_level_metadata_myadmin_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_myadmin_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_myadmin_2eproto = nullptr;

const uint32_t TableStruct_myadmin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::AdminId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::AdminId, _impl_.admin_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::ItemInfo, _impl_.item_id__),
  PROTOBUF_FIELD_OFFSET(::adminspace::ItemInfo, _impl_.item_name__),
  PROTOBUF_FIELD_OFFSET(::adminspace::ItemInfo, _impl_.item_price__),
  PROTOBUF_FIELD_OFFSET(::adminspace::ItemInfo, _impl_.item_description__),
  PROTOBUF_FIELD_OFFSET(::adminspace::ItemInfo, _impl_.admin_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::AllItemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::AllItemList, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::adminspace::AllItemList, _impl_.return_message__),
  PROTOBUF_FIELD_OFFSET(::adminspace::AllItemList, _impl_.item_info__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::StationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::StationInfo, _impl_.station_id__),
  PROTOBUF_FIELD_OFFSET(::adminspace::StationInfo, _impl_.station_name__),
  PROTOBUF_FIELD_OFFSET(::adminspace::StationInfo, _impl_.station_position__),
  PROTOBUF_FIELD_OFFSET(::adminspace::StationInfo, _impl_.station_description__),
  PROTOBUF_FIELD_OFFSET(::adminspace::StationInfo, _impl_.admin_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::AllStationList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::AllStationList, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::adminspace::AllStationList, _impl_.return_message__),
  PROTOBUF_FIELD_OFFSET(::adminspace::AllStationList, _impl_.station_info__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_id__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_sender_id__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_receiver_id__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_start_address__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_end_address__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_money__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_time__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_status__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.order_description__),
  PROTOBUF_FIELD_OFFSET(::adminspace::OrderInfo, _impl_.admin_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::AllOrderList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::AllOrderList, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::adminspace::AllOrderList, _impl_.return_message__),
  PROTOBUF_FIELD_OFFSET(::adminspace::AllOrderList, _impl_.order_info__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::adminspace::BaseReply3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::adminspace::BaseReply3, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::adminspace::BaseReply3, _impl_.return_message__),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::adminspace::AdminId)},
  { 7, -1, -1, sizeof(::adminspace::ItemInfo)},
  { 18, -1, -1, sizeof(::adminspace::AllItemList)},
  { 27, -1, -1, sizeof(::adminspace::StationInfo)},
  { 38, -1, -1, sizeof(::adminspace::AllStationList)},
  { 47, -1, -1, sizeof(::adminspace::OrderInfo)},
  { 63, -1, -1, sizeof(::adminspace::AllOrderList)},
  { 72, -1, -1, sizeof(::adminspace::BaseReply3)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::adminspace::_AdminId_default_instance_._instance,
  &::adminspace::_ItemInfo_default_instance_._instance,
  &::adminspace::_AllItemList_default_instance_._instance,
  &::adminspace::_StationInfo_default_instance_._instance,
  &::adminspace::_AllStationList_default_instance_._instance,
  &::adminspace::_OrderInfo_default_instance_._instance,
  &::adminspace::_AllOrderList_default_instance_._instance,
  &::adminspace::_BaseReply3_default_instance_._instance,
};

const char descriptor_table_protodef_myadmin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmyadmin.proto\022\nadminspace\"\034\n\007AdminId\022\021"
  "\n\tadmin_id_\030\001 \001(\t\"s\n\010ItemInfo\022\020\n\010item_id"
  "_\030\001 \001(\t\022\022\n\nitem_name_\030\002 \001(\t\022\023\n\013item_pric"
  "e_\030\003 \001(\t\022\031\n\021item_description_\030\004 \001(\t\022\021\n\ta"
  "dmin_id_\030\005 \001(\t\"h\n\013AllItemList\022\026\n\016return_"
  "result_\030\001 \001(\010\022\027\n\017return_message_\030\002 \001(\t\022("
  "\n\nitem_info_\030\003 \003(\0132\024.adminspace.ItemInfo"
  "\"\205\001\n\013StationInfo\022\023\n\013station_id_\030\001 \001(\t\022\025\n"
  "\rstation_name_\030\002 \001(\t\022\031\n\021station_position"
  "_\030\003 \001(\t\022\034\n\024station_description_\030\004 \001(\t\022\021\n"
  "\tadmin_id_\030\005 \001(\t\"q\n\016AllStationList\022\026\n\016re"
  "turn_result_\030\001 \001(\010\022\027\n\017return_message_\030\002 "
  "\001(\t\022.\n\rstation_info_\030\003 \003(\0132\027.adminspace."
  "StationInfo\"\377\001\n\tOrderInfo\022\021\n\torder_id_\030\001"
  " \001(\t\022\030\n\020order_sender_id_\030\002 \001(\t\022\032\n\022order_"
  "receiver_id_\030\003 \001(\t\022\034\n\024order_start_addres"
  "s_\030\004 \001(\t\022\032\n\022order_end_address_\030\005 \001(\t\022\024\n\014"
  "order_money_\030\006 \001(\t\022\023\n\013order_time_\030\007 \001(\t\022"
  "\025\n\rorder_status_\030\010 \001(\t\022\032\n\022order_descript"
  "ion_\030\t \001(\t\022\021\n\tadmin_id_\030\n \001(\t\"k\n\014AllOrde"
  "rList\022\026\n\016return_result_\030\001 \001(\010\022\027\n\017return_"
  "message_\030\002 \001(\t\022*\n\013order_info_\030\003 \003(\0132\025.ad"
  "minspace.OrderInfo\"=\n\nBaseReply3\022\026\n\016retu"
  "rn_result_\030\001 \001(\010\022\027\n\017return_message_\030\002 \001("
  "\t2\204\004\n\014AdminService\022>\n\016GetAllItemList\022\023.a"
  "dminspace.AdminId\032\027.adminspace.AllItemLi"
  "st\022D\n\021GetAllStationList\022\023.adminspace.Adm"
  "inId\032\032.adminspace.AllStationList\022@\n\017GetA"
  "llOrderList\022\023.adminspace.AdminId\032\030.admin"
  "space.AllOrderList\0227\n\007AddItem\022\024.adminspa"
  "ce.ItemInfo\032\026.adminspace.BaseReply3\0227\n\007D"
  "elItem\022\024.adminspace.ItemInfo\032\026.adminspac"
  "e.BaseReply3\022=\n\nAddStation\022\027.adminspace."
  "StationInfo\032\026.adminspace.BaseReply3\022=\n\nD"
  "elStation\022\027.adminspace.StationInfo\032\026.adm"
  "inspace.BaseReply3\022<\n\013UpdateOrder\022\025.admi"
  "nspace.OrderInfo\032\026.adminspace.BaseReply3"
  "b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_myadmin_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_myadmin_2eproto = {
    false, false, 1488, descriptor_table_protodef_myadmin_2eproto,
    "myadmin.proto",
    &descriptor_table_myadmin_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_myadmin_2eproto::offsets,
    file_level_metadata_myadmin_2eproto, file_level_enum_descriptors_myadmin_2eproto,
    file_level_service_descriptors_myadmin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_myadmin_2eproto_getter() {
  return &descriptor_table_myadmin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_myadmin_2eproto(&descriptor_table_myadmin_2eproto);
namespace adminspace {

// ===================================================================

class AdminId::_Internal {
 public:
};

AdminId::AdminId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.AdminId)
}
AdminId::AdminId(const AdminId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AdminId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin_id_().empty()) {
    _this->_impl_.admin_id__.Set(from._internal_admin_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:adminspace.AdminId)
}

inline void AdminId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AdminId::~AdminId() {
  // @@protoc_insertion_point(destructor:adminspace.AdminId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AdminId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.admin_id__.Destroy();
}

void AdminId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AdminId::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.AdminId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdminId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string admin_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_admin_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.AdminId.admin_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AdminId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.AdminId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string admin_id_ = 1;
  if (!this->_internal_admin_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_id_().data(), static_cast<int>(this->_internal_admin_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.AdminId.admin_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_admin_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.AdminId)
  return target;
}

size_t AdminId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.AdminId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string admin_id_ = 1;
  if (!this->_internal_admin_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AdminId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AdminId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AdminId::GetClassData() const { return &_class_data_; }


void AdminId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AdminId*>(&to_msg);
  auto& from = static_cast<const AdminId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.AdminId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin_id_().empty()) {
    _this->_internal_set_admin_id_(from._internal_admin_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AdminId::CopyFrom(const AdminId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.AdminId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminId::IsInitialized() const {
  return true;
}

void AdminId::InternalSwap(AdminId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.admin_id__, lhs_arena,
      &other->_impl_.admin_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AdminId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[0]);
}

// ===================================================================

class ItemInfo::_Internal {
 public:
};

ItemInfo::ItemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ItemInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id__){}
    , decltype(_impl_.item_name__){}
    , decltype(_impl_.item_price__){}
    , decltype(_impl_.item_description__){}
    , decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.item_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id_().empty()) {
    _this->_impl_.item_id__.Set(from._internal_item_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_name__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_name__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_name_().empty()) {
    _this->_impl_.item_name__.Set(from._internal_item_name_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_price__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_price__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_price_().empty()) {
    _this->_impl_.item_price__.Set(from._internal_item_price_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_description_().empty()) {
    _this->_impl_.item_description__.Set(from._internal_item_description_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin_id_().empty()) {
    _this->_impl_.admin_id__.Set(from._internal_admin_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:adminspace.ItemInfo)
}

inline void ItemInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id__){}
    , decltype(_impl_.item_name__){}
    , decltype(_impl_.item_price__){}
    , decltype(_impl_.item_description__){}
    , decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.item_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_name__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_name__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_price__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_price__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:adminspace.ItemInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ItemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_id__.Destroy();
  _impl_.item_name__.Destroy();
  _impl_.item_price__.Destroy();
  _impl_.item_description__.Destroy();
  _impl_.admin_id__.Destroy();
}

void ItemInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.ItemInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id__.ClearToEmpty();
  _impl_.item_name__.ClearToEmpty();
  _impl_.item_price__.ClearToEmpty();
  _impl_.item_description__.ClearToEmpty();
  _impl_.admin_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.ItemInfo.item_id_"));
        } else
          goto handle_unusual;
        continue;
      // string item_name_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_name_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.ItemInfo.item_name_"));
        } else
          goto handle_unusual;
        continue;
      // string item_price_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_item_price_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.ItemInfo.item_price_"));
        } else
          goto handle_unusual;
        continue;
      // string item_description_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_item_description_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.ItemInfo.item_description_"));
        } else
          goto handle_unusual;
        continue;
      // string admin_id_ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_admin_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.ItemInfo.admin_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ItemInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.ItemInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id_ = 1;
  if (!this->_internal_item_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id_().data(), static_cast<int>(this->_internal_item_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.ItemInfo.item_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id_(), target);
  }

  // string item_name_ = 2;
  if (!this->_internal_item_name_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_name_().data(), static_cast<int>(this->_internal_item_name_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.ItemInfo.item_name_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_name_(), target);
  }

  // string item_price_ = 3;
  if (!this->_internal_item_price_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_price_().data(), static_cast<int>(this->_internal_item_price_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.ItemInfo.item_price_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_item_price_(), target);
  }

  // string item_description_ = 4;
  if (!this->_internal_item_description_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_description_().data(), static_cast<int>(this->_internal_item_description_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.ItemInfo.item_description_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_item_description_(), target);
  }

  // string admin_id_ = 5;
  if (!this->_internal_admin_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_id_().data(), static_cast<int>(this->_internal_admin_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.ItemInfo.admin_id_");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_admin_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.ItemInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id_ = 1;
  if (!this->_internal_item_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id_());
  }

  // string item_name_ = 2;
  if (!this->_internal_item_name_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_name_());
  }

  // string item_price_ = 3;
  if (!this->_internal_item_price_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_price_());
  }

  // string item_description_ = 4;
  if (!this->_internal_item_description_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_description_());
  }

  // string admin_id_ = 5;
  if (!this->_internal_admin_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ItemInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ItemInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ItemInfo::GetClassData() const { return &_class_data_; }


void ItemInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ItemInfo*>(&to_msg);
  auto& from = static_cast<const ItemInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.ItemInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id_().empty()) {
    _this->_internal_set_item_id_(from._internal_item_id_());
  }
  if (!from._internal_item_name_().empty()) {
    _this->_internal_set_item_name_(from._internal_item_name_());
  }
  if (!from._internal_item_price_().empty()) {
    _this->_internal_set_item_price_(from._internal_item_price_());
  }
  if (!from._internal_item_description_().empty()) {
    _this->_internal_set_item_description_(from._internal_item_description_());
  }
  if (!from._internal_admin_id_().empty()) {
    _this->_internal_set_admin_id_(from._internal_admin_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::InternalSwap(ItemInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_id__, lhs_arena,
      &other->_impl_.item_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_name__, lhs_arena,
      &other->_impl_.item_name__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_price__, lhs_arena,
      &other->_impl_.item_price__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_description__, lhs_arena,
      &other->_impl_.item_description__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.admin_id__, lhs_arena,
      &other->_impl_.admin_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[1]);
}

// ===================================================================

class AllItemList::_Internal {
 public:
};

AllItemList::AllItemList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.AllItemList)
}
AllItemList::AllItemList(const AllItemList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllItemList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_info__){from._impl_.item_info__}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:adminspace.AllItemList)
}

inline void AllItemList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_info__){arena}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AllItemList::~AllItemList() {
  // @@protoc_insertion_point(destructor:adminspace.AllItemList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllItemList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_info__.~RepeatedPtrField();
  _impl_.return_message__.Destroy();
}

void AllItemList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllItemList::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.AllItemList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_info__.Clear();
  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllItemList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.AllItemList.return_message_"));
        } else
          goto handle_unusual;
        continue;
      // repeated .adminspace.ItemInfo item_info_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item_info_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AllItemList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.AllItemList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.AllItemList.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  // repeated .adminspace.ItemInfo item_info_ = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_info__size()); i < n; i++) {
    const auto& repfield = this->_internal_item_info_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.AllItemList)
  return target;
}

size_t AllItemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.AllItemList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .adminspace.ItemInfo item_info_ = 3;
  total_size += 1UL * this->_internal_item_info__size();
  for (const auto& msg : this->_impl_.item_info__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllItemList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllItemList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllItemList::GetClassData() const { return &_class_data_; }


void AllItemList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllItemList*>(&to_msg);
  auto& from = static_cast<const AllItemList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.AllItemList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_info__.MergeFrom(from._impl_.item_info__);
  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllItemList::CopyFrom(const AllItemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.AllItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllItemList::IsInitialized() const {
  return true;
}

void AllItemList::InternalSwap(AllItemList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_info__.InternalSwap(&other->_impl_.item_info__);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllItemList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[2]);
}

// ===================================================================

class StationInfo::_Internal {
 public:
};

StationInfo::StationInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.StationInfo)
}
StationInfo::StationInfo(const StationInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StationInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.station_id__){}
    , decltype(_impl_.station_name__){}
    , decltype(_impl_.station_position__){}
    , decltype(_impl_.station_description__){}
    , decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_id_().empty()) {
    _this->_impl_.station_id__.Set(from._internal_station_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.station_name__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_name__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_name_().empty()) {
    _this->_impl_.station_name__.Set(from._internal_station_name_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.station_position__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_position__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_position_().empty()) {
    _this->_impl_.station_position__.Set(from._internal_station_position_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.station_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_description_().empty()) {
    _this->_impl_.station_description__.Set(from._internal_station_description_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin_id_().empty()) {
    _this->_impl_.admin_id__.Set(from._internal_admin_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:adminspace.StationInfo)
}

inline void StationInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.station_id__){}
    , decltype(_impl_.station_name__){}
    , decltype(_impl_.station_position__){}
    , decltype(_impl_.station_description__){}
    , decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.station_name__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_name__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.station_position__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_position__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.station_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StationInfo::~StationInfo() {
  // @@protoc_insertion_point(destructor:adminspace.StationInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StationInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.station_id__.Destroy();
  _impl_.station_name__.Destroy();
  _impl_.station_position__.Destroy();
  _impl_.station_description__.Destroy();
  _impl_.admin_id__.Destroy();
}

void StationInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.StationInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.station_id__.ClearToEmpty();
  _impl_.station_name__.ClearToEmpty();
  _impl_.station_position__.ClearToEmpty();
  _impl_.station_description__.ClearToEmpty();
  _impl_.admin_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StationInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string station_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_station_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.StationInfo.station_id_"));
        } else
          goto handle_unusual;
        continue;
      // string station_name_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_station_name_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.StationInfo.station_name_"));
        } else
          goto handle_unusual;
        continue;
      // string station_position_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_station_position_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.StationInfo.station_position_"));
        } else
          goto handle_unusual;
        continue;
      // string station_description_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_station_description_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.StationInfo.station_description_"));
        } else
          goto handle_unusual;
        continue;
      // string admin_id_ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_admin_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.StationInfo.admin_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StationInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.StationInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string station_id_ = 1;
  if (!this->_internal_station_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id_().data(), static_cast<int>(this->_internal_station_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.StationInfo.station_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_station_id_(), target);
  }

  // string station_name_ = 2;
  if (!this->_internal_station_name_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_name_().data(), static_cast<int>(this->_internal_station_name_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.StationInfo.station_name_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_station_name_(), target);
  }

  // string station_position_ = 3;
  if (!this->_internal_station_position_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_position_().data(), static_cast<int>(this->_internal_station_position_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.StationInfo.station_position_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_station_position_(), target);
  }

  // string station_description_ = 4;
  if (!this->_internal_station_description_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_description_().data(), static_cast<int>(this->_internal_station_description_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.StationInfo.station_description_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_station_description_(), target);
  }

  // string admin_id_ = 5;
  if (!this->_internal_admin_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_id_().data(), static_cast<int>(this->_internal_admin_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.StationInfo.admin_id_");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_admin_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.StationInfo)
  return target;
}

size_t StationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.StationInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string station_id_ = 1;
  if (!this->_internal_station_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id_());
  }

  // string station_name_ = 2;
  if (!this->_internal_station_name_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_name_());
  }

  // string station_position_ = 3;
  if (!this->_internal_station_position_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_position_());
  }

  // string station_description_ = 4;
  if (!this->_internal_station_description_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_description_());
  }

  // string admin_id_ = 5;
  if (!this->_internal_admin_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StationInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StationInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StationInfo::GetClassData() const { return &_class_data_; }


void StationInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StationInfo*>(&to_msg);
  auto& from = static_cast<const StationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.StationInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_station_id_().empty()) {
    _this->_internal_set_station_id_(from._internal_station_id_());
  }
  if (!from._internal_station_name_().empty()) {
    _this->_internal_set_station_name_(from._internal_station_name_());
  }
  if (!from._internal_station_position_().empty()) {
    _this->_internal_set_station_position_(from._internal_station_position_());
  }
  if (!from._internal_station_description_().empty()) {
    _this->_internal_set_station_description_(from._internal_station_description_());
  }
  if (!from._internal_admin_id_().empty()) {
    _this->_internal_set_admin_id_(from._internal_admin_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StationInfo::CopyFrom(const StationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.StationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationInfo::IsInitialized() const {
  return true;
}

void StationInfo::InternalSwap(StationInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_id__, lhs_arena,
      &other->_impl_.station_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_name__, lhs_arena,
      &other->_impl_.station_name__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_position__, lhs_arena,
      &other->_impl_.station_position__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_description__, lhs_arena,
      &other->_impl_.station_description__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.admin_id__, lhs_arena,
      &other->_impl_.admin_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StationInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[3]);
}

// ===================================================================

class AllStationList::_Internal {
 public:
};

AllStationList::AllStationList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.AllStationList)
}
AllStationList::AllStationList(const AllStationList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllStationList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.station_info__){from._impl_.station_info__}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:adminspace.AllStationList)
}

inline void AllStationList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.station_info__){arena}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AllStationList::~AllStationList() {
  // @@protoc_insertion_point(destructor:adminspace.AllStationList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllStationList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.station_info__.~RepeatedPtrField();
  _impl_.return_message__.Destroy();
}

void AllStationList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllStationList::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.AllStationList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.station_info__.Clear();
  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllStationList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.AllStationList.return_message_"));
        } else
          goto handle_unusual;
        continue;
      // repeated .adminspace.StationInfo station_info_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_station_info_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AllStationList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.AllStationList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.AllStationList.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  // repeated .adminspace.StationInfo station_info_ = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_station_info__size()); i < n; i++) {
    const auto& repfield = this->_internal_station_info_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.AllStationList)
  return target;
}

size_t AllStationList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.AllStationList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .adminspace.StationInfo station_info_ = 3;
  total_size += 1UL * this->_internal_station_info__size();
  for (const auto& msg : this->_impl_.station_info__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllStationList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllStationList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllStationList::GetClassData() const { return &_class_data_; }


void AllStationList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllStationList*>(&to_msg);
  auto& from = static_cast<const AllStationList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.AllStationList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.station_info__.MergeFrom(from._impl_.station_info__);
  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllStationList::CopyFrom(const AllStationList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.AllStationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllStationList::IsInitialized() const {
  return true;
}

void AllStationList::InternalSwap(AllStationList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.station_info__.InternalSwap(&other->_impl_.station_info__);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllStationList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[4]);
}

// ===================================================================

class OrderInfo::_Internal {
 public:
};

OrderInfo::OrderInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.OrderInfo)
}
OrderInfo::OrderInfo(const OrderInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , decltype(_impl_.order_sender_id__){}
    , decltype(_impl_.order_receiver_id__){}
    , decltype(_impl_.order_start_address__){}
    , decltype(_impl_.order_end_address__){}
    , decltype(_impl_.order_money__){}
    , decltype(_impl_.order_time__){}
    , decltype(_impl_.order_status__){}
    , decltype(_impl_.order_description__){}
    , decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_sender_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_sender_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_sender_id_().empty()) {
    _this->_impl_.order_sender_id__.Set(from._internal_order_sender_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_receiver_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_receiver_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_receiver_id_().empty()) {
    _this->_impl_.order_receiver_id__.Set(from._internal_order_receiver_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_start_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_start_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_start_address_().empty()) {
    _this->_impl_.order_start_address__.Set(from._internal_order_start_address_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_end_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_end_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_end_address_().empty()) {
    _this->_impl_.order_end_address__.Set(from._internal_order_end_address_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_money__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_money__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_money_().empty()) {
    _this->_impl_.order_money__.Set(from._internal_order_money_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_time_().empty()) {
    _this->_impl_.order_time__.Set(from._internal_order_time_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_status__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_status__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_status_().empty()) {
    _this->_impl_.order_status__.Set(from._internal_order_status_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_description_().empty()) {
    _this->_impl_.order_description__.Set(from._internal_order_description_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_admin_id_().empty()) {
    _this->_impl_.admin_id__.Set(from._internal_admin_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:adminspace.OrderInfo)
}

inline void OrderInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , decltype(_impl_.order_sender_id__){}
    , decltype(_impl_.order_receiver_id__){}
    , decltype(_impl_.order_start_address__){}
    , decltype(_impl_.order_end_address__){}
    , decltype(_impl_.order_money__){}
    , decltype(_impl_.order_time__){}
    , decltype(_impl_.order_status__){}
    , decltype(_impl_.order_description__){}
    , decltype(_impl_.admin_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_sender_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_sender_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_receiver_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_receiver_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_start_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_start_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_end_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_end_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_money__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_money__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_status__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_status__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_description__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_description__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.admin_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.admin_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrderInfo::~OrderInfo() {
  // @@protoc_insertion_point(destructor:adminspace.OrderInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_id__.Destroy();
  _impl_.order_sender_id__.Destroy();
  _impl_.order_receiver_id__.Destroy();
  _impl_.order_start_address__.Destroy();
  _impl_.order_end_address__.Destroy();
  _impl_.order_money__.Destroy();
  _impl_.order_time__.Destroy();
  _impl_.order_status__.Destroy();
  _impl_.order_description__.Destroy();
  _impl_.admin_id__.Destroy();
}

void OrderInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.OrderInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id__.ClearToEmpty();
  _impl_.order_sender_id__.ClearToEmpty();
  _impl_.order_receiver_id__.ClearToEmpty();
  _impl_.order_start_address__.ClearToEmpty();
  _impl_.order_end_address__.ClearToEmpty();
  _impl_.order_money__.ClearToEmpty();
  _impl_.order_time__.ClearToEmpty();
  _impl_.order_status__.ClearToEmpty();
  _impl_.order_description__.ClearToEmpty();
  _impl_.admin_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string order_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_sender_id_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_order_sender_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_sender_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_receiver_id_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_order_receiver_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_receiver_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_start_address_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_order_start_address_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_start_address_"));
        } else
          goto handle_unusual;
        continue;
      // string order_end_address_ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_order_end_address_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_end_address_"));
        } else
          goto handle_unusual;
        continue;
      // string order_money_ = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_order_money_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_money_"));
        } else
          goto handle_unusual;
        continue;
      // string order_time_ = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_order_time_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_time_"));
        } else
          goto handle_unusual;
        continue;
      // string order_status_ = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_order_status_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_status_"));
        } else
          goto handle_unusual;
        continue;
      // string order_description_ = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_order_description_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.order_description_"));
        } else
          goto handle_unusual;
        continue;
      // string admin_id_ = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_admin_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.OrderInfo.admin_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.OrderInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id_(), target);
  }

  // string order_sender_id_ = 2;
  if (!this->_internal_order_sender_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_sender_id_().data(), static_cast<int>(this->_internal_order_sender_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_sender_id_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_order_sender_id_(), target);
  }

  // string order_receiver_id_ = 3;
  if (!this->_internal_order_receiver_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_receiver_id_().data(), static_cast<int>(this->_internal_order_receiver_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_receiver_id_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_order_receiver_id_(), target);
  }

  // string order_start_address_ = 4;
  if (!this->_internal_order_start_address_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_start_address_().data(), static_cast<int>(this->_internal_order_start_address_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_start_address_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_order_start_address_(), target);
  }

  // string order_end_address_ = 5;
  if (!this->_internal_order_end_address_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_end_address_().data(), static_cast<int>(this->_internal_order_end_address_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_end_address_");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_order_end_address_(), target);
  }

  // string order_money_ = 6;
  if (!this->_internal_order_money_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_money_().data(), static_cast<int>(this->_internal_order_money_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_money_");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_order_money_(), target);
  }

  // string order_time_ = 7;
  if (!this->_internal_order_time_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_time_().data(), static_cast<int>(this->_internal_order_time_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_time_");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_order_time_(), target);
  }

  // string order_status_ = 8;
  if (!this->_internal_order_status_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_status_().data(), static_cast<int>(this->_internal_order_status_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_status_");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_order_status_(), target);
  }

  // string order_description_ = 9;
  if (!this->_internal_order_description_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_description_().data(), static_cast<int>(this->_internal_order_description_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.order_description_");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_order_description_(), target);
  }

  // string admin_id_ = 10;
  if (!this->_internal_admin_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_admin_id_().data(), static_cast<int>(this->_internal_admin_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.OrderInfo.admin_id_");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_admin_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.OrderInfo)
  return target;
}

size_t OrderInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.OrderInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  // string order_sender_id_ = 2;
  if (!this->_internal_order_sender_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_sender_id_());
  }

  // string order_receiver_id_ = 3;
  if (!this->_internal_order_receiver_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_receiver_id_());
  }

  // string order_start_address_ = 4;
  if (!this->_internal_order_start_address_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_start_address_());
  }

  // string order_end_address_ = 5;
  if (!this->_internal_order_end_address_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_end_address_());
  }

  // string order_money_ = 6;
  if (!this->_internal_order_money_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_money_());
  }

  // string order_time_ = 7;
  if (!this->_internal_order_time_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_time_());
  }

  // string order_status_ = 8;
  if (!this->_internal_order_status_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_status_());
  }

  // string order_description_ = 9;
  if (!this->_internal_order_description_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_description_());
  }

  // string admin_id_ = 10;
  if (!this->_internal_admin_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_admin_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderInfo::GetClassData() const { return &_class_data_; }


void OrderInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderInfo*>(&to_msg);
  auto& from = static_cast<const OrderInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.OrderInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  if (!from._internal_order_sender_id_().empty()) {
    _this->_internal_set_order_sender_id_(from._internal_order_sender_id_());
  }
  if (!from._internal_order_receiver_id_().empty()) {
    _this->_internal_set_order_receiver_id_(from._internal_order_receiver_id_());
  }
  if (!from._internal_order_start_address_().empty()) {
    _this->_internal_set_order_start_address_(from._internal_order_start_address_());
  }
  if (!from._internal_order_end_address_().empty()) {
    _this->_internal_set_order_end_address_(from._internal_order_end_address_());
  }
  if (!from._internal_order_money_().empty()) {
    _this->_internal_set_order_money_(from._internal_order_money_());
  }
  if (!from._internal_order_time_().empty()) {
    _this->_internal_set_order_time_(from._internal_order_time_());
  }
  if (!from._internal_order_status_().empty()) {
    _this->_internal_set_order_status_(from._internal_order_status_());
  }
  if (!from._internal_order_description_().empty()) {
    _this->_internal_set_order_description_(from._internal_order_description_());
  }
  if (!from._internal_admin_id_().empty()) {
    _this->_internal_set_admin_id_(from._internal_admin_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderInfo::CopyFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.OrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfo::IsInitialized() const {
  return true;
}

void OrderInfo::InternalSwap(OrderInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_sender_id__, lhs_arena,
      &other->_impl_.order_sender_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_receiver_id__, lhs_arena,
      &other->_impl_.order_receiver_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_start_address__, lhs_arena,
      &other->_impl_.order_start_address__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_end_address__, lhs_arena,
      &other->_impl_.order_end_address__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_money__, lhs_arena,
      &other->_impl_.order_money__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_time__, lhs_arena,
      &other->_impl_.order_time__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_status__, lhs_arena,
      &other->_impl_.order_status__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_description__, lhs_arena,
      &other->_impl_.order_description__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.admin_id__, lhs_arena,
      &other->_impl_.admin_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[5]);
}

// ===================================================================

class AllOrderList::_Internal {
 public:
};

AllOrderList::AllOrderList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.AllOrderList)
}
AllOrderList::AllOrderList(const AllOrderList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllOrderList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_info__){from._impl_.order_info__}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:adminspace.AllOrderList)
}

inline void AllOrderList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_info__){arena}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AllOrderList::~AllOrderList() {
  // @@protoc_insertion_point(destructor:adminspace.AllOrderList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllOrderList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_info__.~RepeatedPtrField();
  _impl_.return_message__.Destroy();
}

void AllOrderList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllOrderList::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.AllOrderList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_info__.Clear();
  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllOrderList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.AllOrderList.return_message_"));
        } else
          goto handle_unusual;
        continue;
      // repeated .adminspace.OrderInfo order_info_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_order_info_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AllOrderList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.AllOrderList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.AllOrderList.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  // repeated .adminspace.OrderInfo order_info_ = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_order_info__size()); i < n; i++) {
    const auto& repfield = this->_internal_order_info_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.AllOrderList)
  return target;
}

size_t AllOrderList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.AllOrderList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .adminspace.OrderInfo order_info_ = 3;
  total_size += 1UL * this->_internal_order_info__size();
  for (const auto& msg : this->_impl_.order_info__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllOrderList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllOrderList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllOrderList::GetClassData() const { return &_class_data_; }


void AllOrderList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllOrderList*>(&to_msg);
  auto& from = static_cast<const AllOrderList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.AllOrderList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.order_info__.MergeFrom(from._impl_.order_info__);
  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllOrderList::CopyFrom(const AllOrderList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.AllOrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllOrderList::IsInitialized() const {
  return true;
}

void AllOrderList::InternalSwap(AllOrderList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.order_info__.InternalSwap(&other->_impl_.order_info__);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllOrderList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[6]);
}

// ===================================================================

class BaseReply3::_Internal {
 public:
};

BaseReply3::BaseReply3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:adminspace.BaseReply3)
}
BaseReply3::BaseReply3(const BaseReply3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseReply3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:adminspace.BaseReply3)
}

inline void BaseReply3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BaseReply3::~BaseReply3() {
  // @@protoc_insertion_point(destructor:adminspace.BaseReply3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseReply3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.return_message__.Destroy();
}

void BaseReply3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseReply3::Clear() {
// @@protoc_insertion_point(message_clear_start:adminspace.BaseReply3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseReply3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "adminspace.BaseReply3.return_message_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseReply3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:adminspace.BaseReply3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "adminspace.BaseReply3.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:adminspace.BaseReply3)
  return target;
}

size_t BaseReply3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:adminspace.BaseReply3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseReply3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseReply3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseReply3::GetClassData() const { return &_class_data_; }


void BaseReply3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseReply3*>(&to_msg);
  auto& from = static_cast<const BaseReply3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:adminspace.BaseReply3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseReply3::CopyFrom(const BaseReply3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:adminspace.BaseReply3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseReply3::IsInitialized() const {
  return true;
}

void BaseReply3::InternalSwap(BaseReply3* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseReply3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_myadmin_2eproto_getter, &descriptor_table_myadmin_2eproto_once,
      file_level_metadata_myadmin_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace adminspace
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::adminspace::AdminId*
Arena::CreateMaybeMessage< ::adminspace::AdminId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::AdminId >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::ItemInfo*
Arena::CreateMaybeMessage< ::adminspace::ItemInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::ItemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::AllItemList*
Arena::CreateMaybeMessage< ::adminspace::AllItemList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::AllItemList >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::StationInfo*
Arena::CreateMaybeMessage< ::adminspace::StationInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::StationInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::AllStationList*
Arena::CreateMaybeMessage< ::adminspace::AllStationList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::AllStationList >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::OrderInfo*
Arena::CreateMaybeMessage< ::adminspace::OrderInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::OrderInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::AllOrderList*
Arena::CreateMaybeMessage< ::adminspace::AllOrderList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::AllOrderList >(arena);
}
template<> PROTOBUF_NOINLINE ::adminspace::BaseReply3*
Arena::CreateMaybeMessage< ::adminspace::BaseReply3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::adminspace::BaseReply3 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
