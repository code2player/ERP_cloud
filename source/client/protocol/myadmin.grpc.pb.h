// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: myadmin.proto
#ifndef GRPC_myadmin_2eproto__INCLUDED
#define GRPC_myadmin_2eproto__INCLUDED

#include "myadmin.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace adminspace {

class AdminService final {
 public:
  static constexpr char const* service_full_name() {
    return "adminspace.AdminService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // get message
    virtual ::grpc::Status GetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::adminspace::AllItemList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllItemList>> AsyncGetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllItemList>>(AsyncGetAllItemListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllItemList>> PrepareAsyncGetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllItemList>>(PrepareAsyncGetAllItemListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::adminspace::AllStationList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllStationList>> AsyncGetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllStationList>>(AsyncGetAllStationListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllStationList>> PrepareAsyncGetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllStationList>>(PrepareAsyncGetAllStationListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::adminspace::AllOrderList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllOrderList>> AsyncGetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllOrderList>>(AsyncGetAllOrderListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllOrderList>> PrepareAsyncGetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllOrderList>>(PrepareAsyncGetAllOrderListRaw(context, request, cq));
    }
    // post message
    virtual ::grpc::Status AddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::adminspace::BaseReply3* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> AsyncAddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(AsyncAddItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> PrepareAsyncAddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(PrepareAsyncAddItemRaw(context, request, cq));
    }
    virtual ::grpc::Status DelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::adminspace::BaseReply3* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> AsyncDelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(AsyncDelItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> PrepareAsyncDelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(PrepareAsyncDelItemRaw(context, request, cq));
    }
    virtual ::grpc::Status AddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::adminspace::BaseReply3* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> AsyncAddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(AsyncAddStationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> PrepareAsyncAddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(PrepareAsyncAddStationRaw(context, request, cq));
    }
    virtual ::grpc::Status DelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::adminspace::BaseReply3* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> AsyncDelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(AsyncDelStationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> PrepareAsyncDelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(PrepareAsyncDelStationRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::adminspace::BaseReply3* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> AsyncUpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(AsyncUpdateOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>> PrepareAsyncUpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>>(PrepareAsyncUpdateOrderRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // get message
      virtual void GetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllItemList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllItemList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllStationList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllStationList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllOrderList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllOrderList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // post message
      virtual void AddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllItemList>* AsyncGetAllItemListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllItemList>* PrepareAsyncGetAllItemListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllStationList>* AsyncGetAllStationListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllStationList>* PrepareAsyncGetAllStationListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllOrderList>* AsyncGetAllOrderListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::AllOrderList>* PrepareAsyncGetAllOrderListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* AsyncAddItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* PrepareAsyncAddItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* AsyncDelItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* PrepareAsyncDelItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* AsyncAddStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* PrepareAsyncAddStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* AsyncDelStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* PrepareAsyncDelStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* AsyncUpdateOrderRaw(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adminspace::BaseReply3>* PrepareAsyncUpdateOrderRaw(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::adminspace::AllItemList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllItemList>> AsyncGetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllItemList>>(AsyncGetAllItemListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllItemList>> PrepareAsyncGetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllItemList>>(PrepareAsyncGetAllItemListRaw(context, request, cq));
    }
    ::grpc::Status GetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::adminspace::AllStationList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllStationList>> AsyncGetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllStationList>>(AsyncGetAllStationListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllStationList>> PrepareAsyncGetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllStationList>>(PrepareAsyncGetAllStationListRaw(context, request, cq));
    }
    ::grpc::Status GetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::adminspace::AllOrderList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllOrderList>> AsyncGetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllOrderList>>(AsyncGetAllOrderListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllOrderList>> PrepareAsyncGetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::AllOrderList>>(PrepareAsyncGetAllOrderListRaw(context, request, cq));
    }
    ::grpc::Status AddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::adminspace::BaseReply3* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> AsyncAddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(AsyncAddItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> PrepareAsyncAddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(PrepareAsyncAddItemRaw(context, request, cq));
    }
    ::grpc::Status DelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::adminspace::BaseReply3* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> AsyncDelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(AsyncDelItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> PrepareAsyncDelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(PrepareAsyncDelItemRaw(context, request, cq));
    }
    ::grpc::Status AddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::adminspace::BaseReply3* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> AsyncAddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(AsyncAddStationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> PrepareAsyncAddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(PrepareAsyncAddStationRaw(context, request, cq));
    }
    ::grpc::Status DelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::adminspace::BaseReply3* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> AsyncDelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(AsyncDelStationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> PrepareAsyncDelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(PrepareAsyncDelStationRaw(context, request, cq));
    }
    ::grpc::Status UpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::adminspace::BaseReply3* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> AsyncUpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(AsyncUpdateOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>> PrepareAsyncUpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>>(PrepareAsyncUpdateOrderRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllItemList* response, std::function<void(::grpc::Status)>) override;
      void GetAllItemList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllItemList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllStationList* response, std::function<void(::grpc::Status)>) override;
      void GetAllStationList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllStationList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllOrderList* response, std::function<void(::grpc::Status)>) override;
      void GetAllOrderList(::grpc::ClientContext* context, const ::adminspace::AdminId* request, ::adminspace::AllOrderList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) override;
      void AddItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) override;
      void DelItem(::grpc::ClientContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) override;
      void AddStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) override;
      void DelStation(::grpc::ClientContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo* request, ::adminspace::BaseReply3* response, std::function<void(::grpc::Status)>) override;
      void UpdateOrder(::grpc::ClientContext* context, const ::adminspace::OrderInfo* request, ::adminspace::BaseReply3* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::adminspace::AllItemList>* AsyncGetAllItemListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::AllItemList>* PrepareAsyncGetAllItemListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::AllStationList>* AsyncGetAllStationListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::AllStationList>* PrepareAsyncGetAllStationListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::AllOrderList>* AsyncGetAllOrderListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::AllOrderList>* PrepareAsyncGetAllOrderListRaw(::grpc::ClientContext* context, const ::adminspace::AdminId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* AsyncAddItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* PrepareAsyncAddItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* AsyncDelItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* PrepareAsyncDelItemRaw(::grpc::ClientContext* context, const ::adminspace::ItemInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* AsyncAddStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* PrepareAsyncAddStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* AsyncDelStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* PrepareAsyncDelStationRaw(::grpc::ClientContext* context, const ::adminspace::StationInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* AsyncUpdateOrderRaw(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adminspace::BaseReply3>* PrepareAsyncUpdateOrderRaw(::grpc::ClientContext* context, const ::adminspace::OrderInfo& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllItemList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllStationList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllOrderList_;
    const ::grpc::internal::RpcMethod rpcmethod_AddItem_;
    const ::grpc::internal::RpcMethod rpcmethod_DelItem_;
    const ::grpc::internal::RpcMethod rpcmethod_AddStation_;
    const ::grpc::internal::RpcMethod rpcmethod_DelStation_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateOrder_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // get message
    virtual ::grpc::Status GetAllItemList(::grpc::ServerContext* context, const ::adminspace::AdminId* request, ::adminspace::AllItemList* response);
    virtual ::grpc::Status GetAllStationList(::grpc::ServerContext* context, const ::adminspace::AdminId* request, ::adminspace::AllStationList* response);
    virtual ::grpc::Status GetAllOrderList(::grpc::ServerContext* context, const ::adminspace::AdminId* request, ::adminspace::AllOrderList* response);
    // post message
    virtual ::grpc::Status AddItem(::grpc::ServerContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response);
    virtual ::grpc::Status DelItem(::grpc::ServerContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response);
    virtual ::grpc::Status AddStation(::grpc::ServerContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response);
    virtual ::grpc::Status DelStation(::grpc::ServerContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response);
    virtual ::grpc::Status UpdateOrder(::grpc::ServerContext* context, const ::adminspace::OrderInfo* request, ::adminspace::BaseReply3* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllItemList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllItemList() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetAllItemList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllItemList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllItemList(::grpc::ServerContext* context, ::adminspace::AdminId* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::AllItemList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllStationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllStationList() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetAllStationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllStationList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllStationList(::grpc::ServerContext* context, ::adminspace::AdminId* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::AllStationList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllOrderList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllOrderList() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetAllOrderList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrderList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllOrderList(::grpc::ServerContext* context, ::adminspace::AdminId* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::AllOrderList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddItem() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_AddItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddItem(::grpc::ServerContext* context, ::adminspace::ItemInfo* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::BaseReply3>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DelItem() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DelItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelItem(::grpc::ServerContext* context, ::adminspace::ItemInfo* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::BaseReply3>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddStation() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_AddStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddStation(::grpc::ServerContext* context, ::adminspace::StationInfo* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::BaseReply3>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DelStation() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DelStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelStation(::grpc::ServerContext* context, ::adminspace::StationInfo* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::BaseReply3>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateOrder() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_UpdateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrder(::grpc::ServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrder(::grpc::ServerContext* context, ::adminspace::OrderInfo* request, ::grpc::ServerAsyncResponseWriter< ::adminspace::BaseReply3>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetAllItemList<WithAsyncMethod_GetAllStationList<WithAsyncMethod_GetAllOrderList<WithAsyncMethod_AddItem<WithAsyncMethod_DelItem<WithAsyncMethod_AddStation<WithAsyncMethod_DelStation<WithAsyncMethod_UpdateOrder<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetAllItemList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllItemList() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::AdminId, ::adminspace::AllItemList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::AdminId* request, ::adminspace::AllItemList* response) { return this->GetAllItemList(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllItemList(
        ::grpc::MessageAllocator< ::adminspace::AdminId, ::adminspace::AllItemList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::AdminId, ::adminspace::AllItemList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllItemList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllItemList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllItemList(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllStationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllStationList() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::AdminId, ::adminspace::AllStationList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::AdminId* request, ::adminspace::AllStationList* response) { return this->GetAllStationList(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllStationList(
        ::grpc::MessageAllocator< ::adminspace::AdminId, ::adminspace::AllStationList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::AdminId, ::adminspace::AllStationList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllStationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllStationList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllStationList(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllOrderList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllOrderList() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::AdminId, ::adminspace::AllOrderList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::AdminId* request, ::adminspace::AllOrderList* response) { return this->GetAllOrderList(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllOrderList(
        ::grpc::MessageAllocator< ::adminspace::AdminId, ::adminspace::AllOrderList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::AdminId, ::adminspace::AllOrderList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllOrderList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrderList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllOrderList(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddItem() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::ItemInfo, ::adminspace::BaseReply3>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response) { return this->AddItem(context, request, response); }));}
    void SetMessageAllocatorFor_AddItem(
        ::grpc::MessageAllocator< ::adminspace::ItemInfo, ::adminspace::BaseReply3>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::ItemInfo, ::adminspace::BaseReply3>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddItem(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DelItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DelItem() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::ItemInfo, ::adminspace::BaseReply3>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::ItemInfo* request, ::adminspace::BaseReply3* response) { return this->DelItem(context, request, response); }));}
    void SetMessageAllocatorFor_DelItem(
        ::grpc::MessageAllocator< ::adminspace::ItemInfo, ::adminspace::BaseReply3>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::ItemInfo, ::adminspace::BaseReply3>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DelItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelItem(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddStation() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::StationInfo, ::adminspace::BaseReply3>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response) { return this->AddStation(context, request, response); }));}
    void SetMessageAllocatorFor_AddStation(
        ::grpc::MessageAllocator< ::adminspace::StationInfo, ::adminspace::BaseReply3>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::StationInfo, ::adminspace::BaseReply3>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddStation(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DelStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DelStation() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::StationInfo, ::adminspace::BaseReply3>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::StationInfo* request, ::adminspace::BaseReply3* response) { return this->DelStation(context, request, response); }));}
    void SetMessageAllocatorFor_DelStation(
        ::grpc::MessageAllocator< ::adminspace::StationInfo, ::adminspace::BaseReply3>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::StationInfo, ::adminspace::BaseReply3>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DelStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelStation(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateOrder() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::adminspace::OrderInfo, ::adminspace::BaseReply3>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::adminspace::OrderInfo* request, ::adminspace::BaseReply3* response) { return this->UpdateOrder(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateOrder(
        ::grpc::MessageAllocator< ::adminspace::OrderInfo, ::adminspace::BaseReply3>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::adminspace::OrderInfo, ::adminspace::BaseReply3>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrder(::grpc::ServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetAllItemList<WithCallbackMethod_GetAllStationList<WithCallbackMethod_GetAllOrderList<WithCallbackMethod_AddItem<WithCallbackMethod_DelItem<WithCallbackMethod_AddStation<WithCallbackMethod_DelStation<WithCallbackMethod_UpdateOrder<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetAllItemList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllItemList() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetAllItemList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllItemList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllStationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllStationList() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetAllStationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllStationList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllOrderList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllOrderList() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetAllOrderList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrderList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddItem() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_AddItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DelItem() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DelItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddStation() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_AddStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DelStation() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DelStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateOrder() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_UpdateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrder(::grpc::ServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllItemList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllItemList() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetAllItemList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllItemList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllItemList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllStationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllStationList() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetAllStationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllStationList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllStationList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllOrderList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllOrderList() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetAllOrderList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrderList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllOrderList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddItem() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_AddItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DelItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DelItem() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DelItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddStation() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_AddStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddStation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DelStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DelStation() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_DelStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelStation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateOrder() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_UpdateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrder(::grpc::ServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllItemList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllItemList() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllItemList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllItemList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllItemList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllItemList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllStationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllStationList() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllStationList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllStationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllStationList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllStationList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllOrderList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllOrderList() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllOrderList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllOrderList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrderList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllOrderList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddItem() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DelItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DelItem() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DelItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_DelItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddStation() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddStation(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddStation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DelStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DelStation() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DelStation(context, request, response); }));
    }
    ~WithRawCallbackMethod_DelStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DelStation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateOrder() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateOrder(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrder(::grpc::ServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllItemList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllItemList() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::AdminId, ::adminspace::AllItemList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::AdminId, ::adminspace::AllItemList>* streamer) {
                       return this->StreamedGetAllItemList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllItemList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllItemList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllItemList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllItemList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::AdminId,::adminspace::AllItemList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllStationList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllStationList() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::AdminId, ::adminspace::AllStationList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::AdminId, ::adminspace::AllStationList>* streamer) {
                       return this->StreamedGetAllStationList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllStationList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllStationList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllStationList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllStationList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::AdminId,::adminspace::AllStationList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllOrderList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllOrderList() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::AdminId, ::adminspace::AllOrderList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::AdminId, ::adminspace::AllOrderList>* streamer) {
                       return this->StreamedGetAllOrderList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllOrderList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllOrderList(::grpc::ServerContext* /*context*/, const ::adminspace::AdminId* /*request*/, ::adminspace::AllOrderList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllOrderList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::AdminId,::adminspace::AllOrderList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddItem() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::ItemInfo, ::adminspace::BaseReply3>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::ItemInfo, ::adminspace::BaseReply3>* streamer) {
                       return this->StreamedAddItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::ItemInfo,::adminspace::BaseReply3>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DelItem() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::ItemInfo, ::adminspace::BaseReply3>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::ItemInfo, ::adminspace::BaseReply3>* streamer) {
                       return this->StreamedDelItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DelItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelItem(::grpc::ServerContext* /*context*/, const ::adminspace::ItemInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::ItemInfo,::adminspace::BaseReply3>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddStation() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::StationInfo, ::adminspace::BaseReply3>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::StationInfo, ::adminspace::BaseReply3>* streamer) {
                       return this->StreamedAddStation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddStation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::StationInfo,::adminspace::BaseReply3>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelStation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DelStation() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::StationInfo, ::adminspace::BaseReply3>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::StationInfo, ::adminspace::BaseReply3>* streamer) {
                       return this->StreamedDelStation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DelStation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelStation(::grpc::ServerContext* /*context*/, const ::adminspace::StationInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelStation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::StationInfo,::adminspace::BaseReply3>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateOrder() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::adminspace::OrderInfo, ::adminspace::BaseReply3>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::adminspace::OrderInfo, ::adminspace::BaseReply3>* streamer) {
                       return this->StreamedUpdateOrder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateOrder(::grpc::ServerContext* /*context*/, const ::adminspace::OrderInfo* /*request*/, ::adminspace::BaseReply3* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateOrder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adminspace::OrderInfo,::adminspace::BaseReply3>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetAllItemList<WithStreamedUnaryMethod_GetAllStationList<WithStreamedUnaryMethod_GetAllOrderList<WithStreamedUnaryMethod_AddItem<WithStreamedUnaryMethod_DelItem<WithStreamedUnaryMethod_AddStation<WithStreamedUnaryMethod_DelStation<WithStreamedUnaryMethod_UpdateOrder<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetAllItemList<WithStreamedUnaryMethod_GetAllStationList<WithStreamedUnaryMethod_GetAllOrderList<WithStreamedUnaryMethod_AddItem<WithStreamedUnaryMethod_DelItem<WithStreamedUnaryMethod_AddStation<WithStreamedUnaryMethod_DelStation<WithStreamedUnaryMethod_UpdateOrder<Service > > > > > > > > StreamedService;
};

}  // namespace adminspace


#endif  // GRPC_myadmin_2eproto__INCLUDED
