// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mylogin.proto

#include "mylogin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace loginspace {
PROTOBUF_CONSTEXPR UserLoginRequest::UserLoginRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_phone__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_password__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_identity__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLoginRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLoginRequestDefaultTypeInternal() {}
  union {
    UserLoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLoginRequestDefaultTypeInternal _UserLoginRequest_default_instance_;
PROTOBUF_CONSTEXPR UserLoginReply::UserLoginReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLoginReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLoginReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLoginReplyDefaultTypeInternal() {}
  union {
    UserLoginReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLoginReplyDefaultTypeInternal _UserLoginReply_default_instance_;
}  // namespace loginspace
static ::_pb::Metadata file_level_metadata_mylogin_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_mylogin_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_mylogin_2eproto = nullptr;

const uint32_t TableStruct_mylogin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginRequest, _impl_.user_phone__),
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginRequest, _impl_.user_password__),
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginRequest, _impl_.user_identity__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginReply, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::loginspace::UserLoginReply, _impl_.return_message__),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::loginspace::UserLoginRequest)},
  { 9, -1, -1, sizeof(::loginspace::UserLoginReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::loginspace::_UserLoginRequest_default_instance_._instance,
  &::loginspace::_UserLoginReply_default_instance_._instance,
};

const char descriptor_table_protodef_mylogin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmylogin.proto\022\nloginspace\"W\n\020UserLogin"
  "Request\022\023\n\013user_phone_\030\001 \001(\t\022\026\n\016user_pas"
  "sword_\030\002 \001(\t\022\026\n\016user_identity_\030\003 \001(\t\"A\n\016"
  "UserLoginReply\022\026\n\016return_result_\030\001 \001(\010\022\027"
  "\n\017return_message_\030\002 \001(\t2P\n\007MyLogin\022E\n\tUs"
  "erLogin\022\034.loginspace.UserLoginRequest\032\032."
  "loginspace.UserLoginReplyb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_mylogin_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_mylogin_2eproto = {
    false, false, 273, descriptor_table_protodef_mylogin_2eproto,
    "mylogin.proto",
    &descriptor_table_mylogin_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_mylogin_2eproto::offsets,
    file_level_metadata_mylogin_2eproto, file_level_enum_descriptors_mylogin_2eproto,
    file_level_service_descriptors_mylogin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_mylogin_2eproto_getter() {
  return &descriptor_table_mylogin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_mylogin_2eproto(&descriptor_table_mylogin_2eproto);
namespace loginspace {

// ===================================================================

class UserLoginRequest::_Internal {
 public:
};

UserLoginRequest::UserLoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:loginspace.UserLoginRequest)
}
UserLoginRequest::UserLoginRequest(const UserLoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLoginRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_phone__){}
    , decltype(_impl_.user_password__){}
    , decltype(_impl_.user_identity__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_phone__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_phone__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_phone_().empty()) {
    _this->_impl_.user_phone__.Set(from._internal_user_phone_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_password__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_password__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_password_().empty()) {
    _this->_impl_.user_password__.Set(from._internal_user_password_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_identity__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_identity__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_identity_().empty()) {
    _this->_impl_.user_identity__.Set(from._internal_user_identity_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:loginspace.UserLoginRequest)
}

inline void UserLoginRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_phone__){}
    , decltype(_impl_.user_password__){}
    , decltype(_impl_.user_identity__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_phone__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_phone__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_password__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_password__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_identity__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_identity__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserLoginRequest::~UserLoginRequest() {
  // @@protoc_insertion_point(destructor:loginspace.UserLoginRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_phone__.Destroy();
  _impl_.user_password__.Destroy();
  _impl_.user_identity__.Destroy();
}

void UserLoginRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:loginspace.UserLoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_phone__.ClearToEmpty();
  _impl_.user_password__.ClearToEmpty();
  _impl_.user_identity__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLoginRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_phone_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_phone_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "loginspace.UserLoginRequest.user_phone_"));
        } else
          goto handle_unusual;
        continue;
      // string user_password_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_password_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "loginspace.UserLoginRequest.user_password_"));
        } else
          goto handle_unusual;
        continue;
      // string user_identity_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_user_identity_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "loginspace.UserLoginRequest.user_identity_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:loginspace.UserLoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_phone_ = 1;
  if (!this->_internal_user_phone_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_phone_().data(), static_cast<int>(this->_internal_user_phone_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "loginspace.UserLoginRequest.user_phone_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_phone_(), target);
  }

  // string user_password_ = 2;
  if (!this->_internal_user_password_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_password_().data(), static_cast<int>(this->_internal_user_password_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "loginspace.UserLoginRequest.user_password_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_password_(), target);
  }

  // string user_identity_ = 3;
  if (!this->_internal_user_identity_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_identity_().data(), static_cast<int>(this->_internal_user_identity_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "loginspace.UserLoginRequest.user_identity_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_identity_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:loginspace.UserLoginRequest)
  return target;
}

size_t UserLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:loginspace.UserLoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_phone_ = 1;
  if (!this->_internal_user_phone_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_phone_());
  }

  // string user_password_ = 2;
  if (!this->_internal_user_password_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_password_());
  }

  // string user_identity_ = 3;
  if (!this->_internal_user_identity_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_identity_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLoginRequest::GetClassData() const { return &_class_data_; }


void UserLoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLoginRequest*>(&to_msg);
  auto& from = static_cast<const UserLoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:loginspace.UserLoginRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_phone_().empty()) {
    _this->_internal_set_user_phone_(from._internal_user_phone_());
  }
  if (!from._internal_user_password_().empty()) {
    _this->_internal_set_user_password_(from._internal_user_password_());
  }
  if (!from._internal_user_identity_().empty()) {
    _this->_internal_set_user_identity_(from._internal_user_identity_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLoginRequest::CopyFrom(const UserLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:loginspace.UserLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginRequest::IsInitialized() const {
  return true;
}

void UserLoginRequest::InternalSwap(UserLoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_phone__, lhs_arena,
      &other->_impl_.user_phone__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_password__, lhs_arena,
      &other->_impl_.user_password__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_identity__, lhs_arena,
      &other->_impl_.user_identity__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mylogin_2eproto_getter, &descriptor_table_mylogin_2eproto_once,
      file_level_metadata_mylogin_2eproto[0]);
}

// ===================================================================

class UserLoginReply::_Internal {
 public:
};

UserLoginReply::UserLoginReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:loginspace.UserLoginReply)
}
UserLoginReply::UserLoginReply(const UserLoginReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLoginReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:loginspace.UserLoginReply)
}

inline void UserLoginReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserLoginReply::~UserLoginReply() {
  // @@protoc_insertion_point(destructor:loginspace.UserLoginReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLoginReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.return_message__.Destroy();
}

void UserLoginReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:loginspace.UserLoginReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLoginReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "loginspace.UserLoginReply.return_message_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLoginReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:loginspace.UserLoginReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "loginspace.UserLoginReply.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:loginspace.UserLoginReply)
  return target;
}

size_t UserLoginReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:loginspace.UserLoginReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLoginReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLoginReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLoginReply::GetClassData() const { return &_class_data_; }


void UserLoginReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLoginReply*>(&to_msg);
  auto& from = static_cast<const UserLoginReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:loginspace.UserLoginReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLoginReply::CopyFrom(const UserLoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:loginspace.UserLoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginReply::IsInitialized() const {
  return true;
}

void UserLoginReply::InternalSwap(UserLoginReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLoginReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mylogin_2eproto_getter, &descriptor_table_mylogin_2eproto_once,
      file_level_metadata_mylogin_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace loginspace
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::loginspace::UserLoginRequest*
Arena::CreateMaybeMessage< ::loginspace::UserLoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::loginspace::UserLoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::loginspace::UserLoginReply*
Arena::CreateMaybeMessage< ::loginspace::UserLoginReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::loginspace::UserLoginReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
