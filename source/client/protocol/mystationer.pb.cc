// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mystationer.proto

#include "mystationer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace stationerspace {
PROTOBUF_CONSTEXPR StationerId::StationerId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stationer_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StationerIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StationerIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StationerIdDefaultTypeInternal() {}
  union {
    StationerId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StationerIdDefaultTypeInternal _StationerId_default_instance_;
PROTOBUF_CONSTEXPR BaseReply2::BaseReply2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BaseReply2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseReply2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseReply2DefaultTypeInternal() {}
  union {
    BaseReply2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseReply2DefaultTypeInternal _BaseReply2_default_instance_;
PROTOBUF_CONSTEXPR StationId::StationId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.station_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StationIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StationIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StationIdDefaultTypeInternal() {}
  union {
    StationId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StationIdDefaultTypeInternal _StationId_default_instance_;
PROTOBUF_CONSTEXPR SaveOrder::SaveOrder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.input_time__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveOrderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveOrderDefaultTypeInternal() {}
  union {
    SaveOrder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveOrderDefaultTypeInternal _SaveOrder_default_instance_;
PROTOBUF_CONSTEXPR SaveOrderList::SaveOrderList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_list__)*/{}
  , /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveOrderListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveOrderListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveOrderListDefaultTypeInternal() {}
  union {
    SaveOrderList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveOrderListDefaultTypeInternal _SaveOrderList_default_instance_;
PROTOBUF_CONSTEXPR InStationRequest::InStationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stationer_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.station_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InStationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InStationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InStationRequestDefaultTypeInternal() {}
  union {
    InStationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InStationRequestDefaultTypeInternal _InStationRequest_default_instance_;
PROTOBUF_CONSTEXPR OutStationRequest::OutStationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stationer_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.order_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.station_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.next_address__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OutStationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutStationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutStationRequestDefaultTypeInternal() {}
  union {
    OutStationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutStationRequestDefaultTypeInternal _OutStationRequest_default_instance_;
PROTOBUF_CONSTEXPR StationerInfo::StationerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.return_message__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.stationer_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.station_id__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.stationer_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_result__)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StationerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StationerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StationerInfoDefaultTypeInternal() {}
  union {
    StationerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StationerInfoDefaultTypeInternal _StationerInfo_default_instance_;
}  // namespace stationerspace
static ::_pb::Metadata file_level_metadata_mystationer_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_mystationer_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_mystationer_2eproto = nullptr;

const uint32_t TableStruct_mystationer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerId, _impl_.stationer_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::BaseReply2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::BaseReply2, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::BaseReply2, _impl_.return_message__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationId, _impl_.station_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrder, _impl_.order_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrder, _impl_.input_time__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrderList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrderList, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrderList, _impl_.return_message__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::SaveOrderList, _impl_.order_list__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::InStationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::InStationRequest, _impl_.stationer_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::InStationRequest, _impl_.order_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::InStationRequest, _impl_.station_id__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::OutStationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::OutStationRequest, _impl_.stationer_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::OutStationRequest, _impl_.order_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::OutStationRequest, _impl_.station_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::OutStationRequest, _impl_.next_address__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerInfo, _impl_.return_result__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerInfo, _impl_.return_message__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerInfo, _impl_.stationer_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerInfo, _impl_.station_id__),
  PROTOBUF_FIELD_OFFSET(::stationerspace::StationerInfo, _impl_.stationer_name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::stationerspace::StationerId)},
  { 7, -1, -1, sizeof(::stationerspace::BaseReply2)},
  { 15, -1, -1, sizeof(::stationerspace::StationId)},
  { 22, -1, -1, sizeof(::stationerspace::SaveOrder)},
  { 30, -1, -1, sizeof(::stationerspace::SaveOrderList)},
  { 39, -1, -1, sizeof(::stationerspace::InStationRequest)},
  { 48, -1, -1, sizeof(::stationerspace::OutStationRequest)},
  { 58, -1, -1, sizeof(::stationerspace::StationerInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::stationerspace::_StationerId_default_instance_._instance,
  &::stationerspace::_BaseReply2_default_instance_._instance,
  &::stationerspace::_StationId_default_instance_._instance,
  &::stationerspace::_SaveOrder_default_instance_._instance,
  &::stationerspace::_SaveOrderList_default_instance_._instance,
  &::stationerspace::_InStationRequest_default_instance_._instance,
  &::stationerspace::_OutStationRequest_default_instance_._instance,
  &::stationerspace::_StationerInfo_default_instance_._instance,
};

const char descriptor_table_protodef_mystationer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021mystationer.proto\022\016stationerspace\"$\n\013S"
  "tationerId\022\025\n\rstationer_id_\030\001 \001(\t\"=\n\nBas"
  "eReply2\022\026\n\016return_result_\030\001 \001(\010\022\027\n\017retur"
  "n_message_\030\002 \001(\t\" \n\tStationId\022\023\n\013station"
  "_id_\030\001 \001(\t\"3\n\tSaveOrder\022\021\n\torder_id_\030\001 \001"
  "(\t\022\023\n\013input_time_\030\002 \001(\t\"p\n\rSaveOrderList"
  "\022\026\n\016return_result_\030\001 \001(\010\022\027\n\017return_messa"
  "ge_\030\002 \001(\t\022.\n\013order_list_\030\003 \003(\0132\031.station"
  "erspace.SaveOrder\"Q\n\020InStationRequest\022\025\n"
  "\rstationer_id_\030\001 \001(\t\022\021\n\torder_id_\030\002 \001(\t\022"
  "\023\n\013station_id_\030\003 \001(\t\"i\n\021OutStationReques"
  "t\022\025\n\rstationer_id_\030\001 \001(\t\022\021\n\torder_id_\030\002 "
  "\001(\t\022\023\n\013station_id_\030\003 \001(\t\022\025\n\rnext_address"
  "_\030\004 \001(\t\"\204\001\n\rStationerInfo\022\026\n\016return_resu"
  "lt_\030\001 \001(\010\022\027\n\017return_message_\030\002 \001(\t\022\025\n\rst"
  "ationer_id_\030\003 \001(\t\022\023\n\013station_id_\030\004 \001(\t\022\026"
  "\n\016stationer_name\030\005 \001(\t2\311\002\n\016StationerOrde"
  "r\022O\n\023GetStationOrderList\022\031.stationerspac"
  "e.StationId\032\035.stationerspace.SaveOrderLi"
  "st\022N\n\020GetStationerInfo\022\033.stationerspace."
  "StationerId\032\035.stationerspace.StationerIn"
  "fo\022I\n\tInStation\022 .stationerspace.InStati"
  "onRequest\032\032.stationerspace.BaseReply2\022K\n"
  "\nOutStation\022!.stationerspace.OutStationR"
  "equest\032\032.stationerspace.BaseReply2b\006prot"
  "o3"
  ;
static ::_pbi::once_flag descriptor_table_mystationer_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_mystationer_2eproto = {
    false, false, 1002, descriptor_table_protodef_mystationer_2eproto,
    "mystationer.proto",
    &descriptor_table_mystationer_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_mystationer_2eproto::offsets,
    file_level_metadata_mystationer_2eproto, file_level_enum_descriptors_mystationer_2eproto,
    file_level_service_descriptors_mystationer_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_mystationer_2eproto_getter() {
  return &descriptor_table_mystationer_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_mystationer_2eproto(&descriptor_table_mystationer_2eproto);
namespace stationerspace {

// ===================================================================

class StationerId::_Internal {
 public:
};

StationerId::StationerId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.StationerId)
}
StationerId::StationerId(const StationerId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StationerId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stationer_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stationer_id_().empty()) {
    _this->_impl_.stationer_id__.Set(from._internal_stationer_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stationerspace.StationerId)
}

inline void StationerId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stationer_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StationerId::~StationerId() {
  // @@protoc_insertion_point(destructor:stationerspace.StationerId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StationerId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stationer_id__.Destroy();
}

void StationerId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StationerId::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.StationerId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stationer_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StationerId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string stationer_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_stationer_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.StationerId.stationer_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StationerId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.StationerId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string stationer_id_ = 1;
  if (!this->_internal_stationer_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stationer_id_().data(), static_cast<int>(this->_internal_stationer_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.StationerId.stationer_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stationer_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.StationerId)
  return target;
}

size_t StationerId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.StationerId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stationer_id_ = 1;
  if (!this->_internal_stationer_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stationer_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StationerId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StationerId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StationerId::GetClassData() const { return &_class_data_; }


void StationerId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StationerId*>(&to_msg);
  auto& from = static_cast<const StationerId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.StationerId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stationer_id_().empty()) {
    _this->_internal_set_stationer_id_(from._internal_stationer_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StationerId::CopyFrom(const StationerId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.StationerId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationerId::IsInitialized() const {
  return true;
}

void StationerId::InternalSwap(StationerId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stationer_id__, lhs_arena,
      &other->_impl_.stationer_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StationerId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[0]);
}

// ===================================================================

class BaseReply2::_Internal {
 public:
};

BaseReply2::BaseReply2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.BaseReply2)
}
BaseReply2::BaseReply2(const BaseReply2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BaseReply2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:stationerspace.BaseReply2)
}

inline void BaseReply2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BaseReply2::~BaseReply2() {
  // @@protoc_insertion_point(destructor:stationerspace.BaseReply2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BaseReply2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.return_message__.Destroy();
}

void BaseReply2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BaseReply2::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.BaseReply2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseReply2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.BaseReply2.return_message_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseReply2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.BaseReply2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.BaseReply2.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.BaseReply2)
  return target;
}

size_t BaseReply2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.BaseReply2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseReply2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BaseReply2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseReply2::GetClassData() const { return &_class_data_; }


void BaseReply2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BaseReply2*>(&to_msg);
  auto& from = static_cast<const BaseReply2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.BaseReply2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseReply2::CopyFrom(const BaseReply2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.BaseReply2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseReply2::IsInitialized() const {
  return true;
}

void BaseReply2::InternalSwap(BaseReply2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseReply2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[1]);
}

// ===================================================================

class StationId::_Internal {
 public:
};

StationId::StationId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.StationId)
}
StationId::StationId(const StationId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StationId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.station_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_id_().empty()) {
    _this->_impl_.station_id__.Set(from._internal_station_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stationerspace.StationId)
}

inline void StationId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.station_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StationId::~StationId() {
  // @@protoc_insertion_point(destructor:stationerspace.StationId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StationId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.station_id__.Destroy();
}

void StationId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StationId::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.StationId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.station_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StationId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string station_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_station_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.StationId.station_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StationId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.StationId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string station_id_ = 1;
  if (!this->_internal_station_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id_().data(), static_cast<int>(this->_internal_station_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.StationId.station_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_station_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.StationId)
  return target;
}

size_t StationId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.StationId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string station_id_ = 1;
  if (!this->_internal_station_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StationId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StationId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StationId::GetClassData() const { return &_class_data_; }


void StationId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StationId*>(&to_msg);
  auto& from = static_cast<const StationId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.StationId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_station_id_().empty()) {
    _this->_internal_set_station_id_(from._internal_station_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StationId::CopyFrom(const StationId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.StationId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationId::IsInitialized() const {
  return true;
}

void StationId::InternalSwap(StationId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_id__, lhs_arena,
      &other->_impl_.station_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StationId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[2]);
}

// ===================================================================

class SaveOrder::_Internal {
 public:
};

SaveOrder::SaveOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.SaveOrder)
}
SaveOrder::SaveOrder(const SaveOrder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveOrder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , decltype(_impl_.input_time__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.input_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_input_time_().empty()) {
    _this->_impl_.input_time__.Set(from._internal_input_time_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stationerspace.SaveOrder)
}

inline void SaveOrder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id__){}
    , decltype(_impl_.input_time__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.input_time__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_time__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveOrder::~SaveOrder() {
  // @@protoc_insertion_point(destructor:stationerspace.SaveOrder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveOrder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_id__.Destroy();
  _impl_.input_time__.Destroy();
}

void SaveOrder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.SaveOrder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id__.ClearToEmpty();
  _impl_.input_time__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveOrder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string order_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.SaveOrder.order_id_"));
        } else
          goto handle_unusual;
        continue;
      // string input_time_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_input_time_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.SaveOrder.input_time_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveOrder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.SaveOrder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.SaveOrder.order_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_order_id_(), target);
  }

  // string input_time_ = 2;
  if (!this->_internal_input_time_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_time_().data(), static_cast<int>(this->_internal_input_time_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.SaveOrder.input_time_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_input_time_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.SaveOrder)
  return target;
}

size_t SaveOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.SaveOrder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string order_id_ = 1;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  // string input_time_ = 2;
  if (!this->_internal_input_time_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_time_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveOrder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveOrder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveOrder::GetClassData() const { return &_class_data_; }


void SaveOrder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveOrder*>(&to_msg);
  auto& from = static_cast<const SaveOrder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.SaveOrder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  if (!from._internal_input_time_().empty()) {
    _this->_internal_set_input_time_(from._internal_input_time_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveOrder::CopyFrom(const SaveOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.SaveOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveOrder::IsInitialized() const {
  return true;
}

void SaveOrder::InternalSwap(SaveOrder* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.input_time__, lhs_arena,
      &other->_impl_.input_time__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveOrder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[3]);
}

// ===================================================================

class SaveOrderList::_Internal {
 public:
};

SaveOrderList::SaveOrderList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.SaveOrderList)
}
SaveOrderList::SaveOrderList(const SaveOrderList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveOrderList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_list__){from._impl_.order_list__}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:stationerspace.SaveOrderList)
}

inline void SaveOrderList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_list__){arena}
    , decltype(_impl_.return_message__){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveOrderList::~SaveOrderList() {
  // @@protoc_insertion_point(destructor:stationerspace.SaveOrderList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveOrderList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.order_list__.~RepeatedPtrField();
  _impl_.return_message__.Destroy();
}

void SaveOrderList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveOrderList::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.SaveOrderList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_list__.Clear();
  _impl_.return_message__.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveOrderList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.SaveOrderList.return_message_"));
        } else
          goto handle_unusual;
        continue;
      // repeated .stationerspace.SaveOrder order_list_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_order_list_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveOrderList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.SaveOrderList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.SaveOrderList.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  // repeated .stationerspace.SaveOrder order_list_ = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_order_list__size()); i < n; i++) {
    const auto& repfield = this->_internal_order_list_(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.SaveOrderList)
  return target;
}

size_t SaveOrderList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.SaveOrderList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .stationerspace.SaveOrder order_list_ = 3;
  total_size += 1UL * this->_internal_order_list__size();
  for (const auto& msg : this->_impl_.order_list__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveOrderList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveOrderList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveOrderList::GetClassData() const { return &_class_data_; }


void SaveOrderList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveOrderList*>(&to_msg);
  auto& from = static_cast<const SaveOrderList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.SaveOrderList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.order_list__.MergeFrom(from._impl_.order_list__);
  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveOrderList::CopyFrom(const SaveOrderList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.SaveOrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveOrderList::IsInitialized() const {
  return true;
}

void SaveOrderList::InternalSwap(SaveOrderList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.order_list__.InternalSwap(&other->_impl_.order_list__);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveOrderList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[4]);
}

// ===================================================================

class InStationRequest::_Internal {
 public:
};

InStationRequest::InStationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.InStationRequest)
}
InStationRequest::InStationRequest(const InStationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InStationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stationer_id__){}
    , decltype(_impl_.order_id__){}
    , decltype(_impl_.station_id__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stationer_id_().empty()) {
    _this->_impl_.stationer_id__.Set(from._internal_stationer_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_id_().empty()) {
    _this->_impl_.station_id__.Set(from._internal_station_id_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stationerspace.InStationRequest)
}

inline void InStationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stationer_id__){}
    , decltype(_impl_.order_id__){}
    , decltype(_impl_.station_id__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InStationRequest::~InStationRequest() {
  // @@protoc_insertion_point(destructor:stationerspace.InStationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InStationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stationer_id__.Destroy();
  _impl_.order_id__.Destroy();
  _impl_.station_id__.Destroy();
}

void InStationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InStationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.InStationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stationer_id__.ClearToEmpty();
  _impl_.order_id__.ClearToEmpty();
  _impl_.station_id__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InStationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string stationer_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_stationer_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.InStationRequest.stationer_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_id_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.InStationRequest.order_id_"));
        } else
          goto handle_unusual;
        continue;
      // string station_id_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_station_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.InStationRequest.station_id_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InStationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.InStationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string stationer_id_ = 1;
  if (!this->_internal_stationer_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stationer_id_().data(), static_cast<int>(this->_internal_stationer_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.InStationRequest.stationer_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stationer_id_(), target);
  }

  // string order_id_ = 2;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.InStationRequest.order_id_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_order_id_(), target);
  }

  // string station_id_ = 3;
  if (!this->_internal_station_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id_().data(), static_cast<int>(this->_internal_station_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.InStationRequest.station_id_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_station_id_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.InStationRequest)
  return target;
}

size_t InStationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.InStationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stationer_id_ = 1;
  if (!this->_internal_stationer_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stationer_id_());
  }

  // string order_id_ = 2;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  // string station_id_ = 3;
  if (!this->_internal_station_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InStationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InStationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InStationRequest::GetClassData() const { return &_class_data_; }


void InStationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InStationRequest*>(&to_msg);
  auto& from = static_cast<const InStationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.InStationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stationer_id_().empty()) {
    _this->_internal_set_stationer_id_(from._internal_stationer_id_());
  }
  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  if (!from._internal_station_id_().empty()) {
    _this->_internal_set_station_id_(from._internal_station_id_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InStationRequest::CopyFrom(const InStationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.InStationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InStationRequest::IsInitialized() const {
  return true;
}

void InStationRequest::InternalSwap(InStationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stationer_id__, lhs_arena,
      &other->_impl_.stationer_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_id__, lhs_arena,
      &other->_impl_.station_id__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InStationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[5]);
}

// ===================================================================

class OutStationRequest::_Internal {
 public:
};

OutStationRequest::OutStationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.OutStationRequest)
}
OutStationRequest::OutStationRequest(const OutStationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OutStationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stationer_id__){}
    , decltype(_impl_.order_id__){}
    , decltype(_impl_.station_id__){}
    , decltype(_impl_.next_address__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stationer_id_().empty()) {
    _this->_impl_.stationer_id__.Set(from._internal_stationer_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order_id_().empty()) {
    _this->_impl_.order_id__.Set(from._internal_order_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_id_().empty()) {
    _this->_impl_.station_id__.Set(from._internal_station_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.next_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_address_().empty()) {
    _this->_impl_.next_address__.Set(from._internal_next_address_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:stationerspace.OutStationRequest)
}

inline void OutStationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stationer_id__){}
    , decltype(_impl_.order_id__){}
    , decltype(_impl_.station_id__){}
    , decltype(_impl_.next_address__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.order_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.order_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.next_address__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_address__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OutStationRequest::~OutStationRequest() {
  // @@protoc_insertion_point(destructor:stationerspace.OutStationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OutStationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stationer_id__.Destroy();
  _impl_.order_id__.Destroy();
  _impl_.station_id__.Destroy();
  _impl_.next_address__.Destroy();
}

void OutStationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OutStationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.OutStationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stationer_id__.ClearToEmpty();
  _impl_.order_id__.ClearToEmpty();
  _impl_.station_id__.ClearToEmpty();
  _impl_.next_address__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutStationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string stationer_id_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_stationer_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.OutStationRequest.stationer_id_"));
        } else
          goto handle_unusual;
        continue;
      // string order_id_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_order_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.OutStationRequest.order_id_"));
        } else
          goto handle_unusual;
        continue;
      // string station_id_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_station_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.OutStationRequest.station_id_"));
        } else
          goto handle_unusual;
        continue;
      // string next_address_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_next_address_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.OutStationRequest.next_address_"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OutStationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.OutStationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string stationer_id_ = 1;
  if (!this->_internal_stationer_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stationer_id_().data(), static_cast<int>(this->_internal_stationer_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.OutStationRequest.stationer_id_");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stationer_id_(), target);
  }

  // string order_id_ = 2;
  if (!this->_internal_order_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_id_().data(), static_cast<int>(this->_internal_order_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.OutStationRequest.order_id_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_order_id_(), target);
  }

  // string station_id_ = 3;
  if (!this->_internal_station_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id_().data(), static_cast<int>(this->_internal_station_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.OutStationRequest.station_id_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_station_id_(), target);
  }

  // string next_address_ = 4;
  if (!this->_internal_next_address_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_address_().data(), static_cast<int>(this->_internal_next_address_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.OutStationRequest.next_address_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_next_address_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.OutStationRequest)
  return target;
}

size_t OutStationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.OutStationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stationer_id_ = 1;
  if (!this->_internal_stationer_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stationer_id_());
  }

  // string order_id_ = 2;
  if (!this->_internal_order_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_id_());
  }

  // string station_id_ = 3;
  if (!this->_internal_station_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id_());
  }

  // string next_address_ = 4;
  if (!this->_internal_next_address_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_address_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OutStationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OutStationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OutStationRequest::GetClassData() const { return &_class_data_; }


void OutStationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OutStationRequest*>(&to_msg);
  auto& from = static_cast<const OutStationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.OutStationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stationer_id_().empty()) {
    _this->_internal_set_stationer_id_(from._internal_stationer_id_());
  }
  if (!from._internal_order_id_().empty()) {
    _this->_internal_set_order_id_(from._internal_order_id_());
  }
  if (!from._internal_station_id_().empty()) {
    _this->_internal_set_station_id_(from._internal_station_id_());
  }
  if (!from._internal_next_address_().empty()) {
    _this->_internal_set_next_address_(from._internal_next_address_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OutStationRequest::CopyFrom(const OutStationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.OutStationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutStationRequest::IsInitialized() const {
  return true;
}

void OutStationRequest::InternalSwap(OutStationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stationer_id__, lhs_arena,
      &other->_impl_.stationer_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.order_id__, lhs_arena,
      &other->_impl_.order_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_id__, lhs_arena,
      &other->_impl_.station_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_address__, lhs_arena,
      &other->_impl_.next_address__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OutStationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[6]);
}

// ===================================================================

class StationerInfo::_Internal {
 public:
};

StationerInfo::StationerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:stationerspace.StationerInfo)
}
StationerInfo::StationerInfo(const StationerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StationerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.stationer_id__){}
    , decltype(_impl_.station_id__){}
    , decltype(_impl_.stationer_name_){}
    , decltype(_impl_.return_result__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_return_message_().empty()) {
    _this->_impl_.return_message__.Set(from._internal_return_message_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stationer_id_().empty()) {
    _this->_impl_.stationer_id__.Set(from._internal_stationer_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_station_id_().empty()) {
    _this->_impl_.station_id__.Set(from._internal_station_id_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.stationer_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stationer_name().empty()) {
    _this->_impl_.stationer_name_.Set(from._internal_stationer_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.return_result__ = from._impl_.return_result__;
  // @@protoc_insertion_point(copy_constructor:stationerspace.StationerInfo)
}

inline void StationerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.return_message__){}
    , decltype(_impl_.stationer_id__){}
    , decltype(_impl_.station_id__){}
    , decltype(_impl_.stationer_name_){}
    , decltype(_impl_.return_result__){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.return_message__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.return_message__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stationer_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.station_id__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.station_id__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stationer_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stationer_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StationerInfo::~StationerInfo() {
  // @@protoc_insertion_point(destructor:stationerspace.StationerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StationerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.return_message__.Destroy();
  _impl_.stationer_id__.Destroy();
  _impl_.station_id__.Destroy();
  _impl_.stationer_name_.Destroy();
}

void StationerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StationerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:stationerspace.StationerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.return_message__.ClearToEmpty();
  _impl_.stationer_id__.ClearToEmpty();
  _impl_.station_id__.ClearToEmpty();
  _impl_.stationer_name_.ClearToEmpty();
  _impl_.return_result__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StationerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_result_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_result__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string return_message_ = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_return_message_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.StationerInfo.return_message_"));
        } else
          goto handle_unusual;
        continue;
      // string stationer_id_ = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_stationer_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.StationerInfo.stationer_id_"));
        } else
          goto handle_unusual;
        continue;
      // string station_id_ = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_station_id_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.StationerInfo.station_id_"));
        } else
          goto handle_unusual;
        continue;
      // string stationer_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_stationer_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "stationerspace.StationerInfo.stationer_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StationerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:stationerspace.StationerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_result_(), target);
  }

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_return_message_().data(), static_cast<int>(this->_internal_return_message_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.StationerInfo.return_message_");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_return_message_(), target);
  }

  // string stationer_id_ = 3;
  if (!this->_internal_stationer_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stationer_id_().data(), static_cast<int>(this->_internal_stationer_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.StationerInfo.stationer_id_");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_stationer_id_(), target);
  }

  // string station_id_ = 4;
  if (!this->_internal_station_id_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id_().data(), static_cast<int>(this->_internal_station_id_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.StationerInfo.station_id_");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_station_id_(), target);
  }

  // string stationer_name = 5;
  if (!this->_internal_stationer_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stationer_name().data(), static_cast<int>(this->_internal_stationer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "stationerspace.StationerInfo.stationer_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_stationer_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stationerspace.StationerInfo)
  return target;
}

size_t StationerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stationerspace.StationerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string return_message_ = 2;
  if (!this->_internal_return_message_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_return_message_());
  }

  // string stationer_id_ = 3;
  if (!this->_internal_stationer_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stationer_id_());
  }

  // string station_id_ = 4;
  if (!this->_internal_station_id_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id_());
  }

  // string stationer_name = 5;
  if (!this->_internal_stationer_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stationer_name());
  }

  // bool return_result_ = 1;
  if (this->_internal_return_result_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StationerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StationerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StationerInfo::GetClassData() const { return &_class_data_; }


void StationerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StationerInfo*>(&to_msg);
  auto& from = static_cast<const StationerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stationerspace.StationerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_return_message_().empty()) {
    _this->_internal_set_return_message_(from._internal_return_message_());
  }
  if (!from._internal_stationer_id_().empty()) {
    _this->_internal_set_stationer_id_(from._internal_stationer_id_());
  }
  if (!from._internal_station_id_().empty()) {
    _this->_internal_set_station_id_(from._internal_station_id_());
  }
  if (!from._internal_stationer_name().empty()) {
    _this->_internal_set_stationer_name(from._internal_stationer_name());
  }
  if (from._internal_return_result_() != 0) {
    _this->_internal_set_return_result_(from._internal_return_result_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StationerInfo::CopyFrom(const StationerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stationerspace.StationerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationerInfo::IsInitialized() const {
  return true;
}

void StationerInfo::InternalSwap(StationerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.return_message__, lhs_arena,
      &other->_impl_.return_message__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stationer_id__, lhs_arena,
      &other->_impl_.stationer_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.station_id__, lhs_arena,
      &other->_impl_.station_id__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stationer_name_, lhs_arena,
      &other->_impl_.stationer_name_, rhs_arena
  );
  swap(_impl_.return_result__, other->_impl_.return_result__);
}

::PROTOBUF_NAMESPACE_ID::Metadata StationerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mystationer_2eproto_getter, &descriptor_table_mystationer_2eproto_once,
      file_level_metadata_mystationer_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace stationerspace
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::stationerspace::StationerId*
Arena::CreateMaybeMessage< ::stationerspace::StationerId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::StationerId >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::BaseReply2*
Arena::CreateMaybeMessage< ::stationerspace::BaseReply2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::BaseReply2 >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::StationId*
Arena::CreateMaybeMessage< ::stationerspace::StationId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::StationId >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::SaveOrder*
Arena::CreateMaybeMessage< ::stationerspace::SaveOrder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::SaveOrder >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::SaveOrderList*
Arena::CreateMaybeMessage< ::stationerspace::SaveOrderList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::SaveOrderList >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::InStationRequest*
Arena::CreateMaybeMessage< ::stationerspace::InStationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::InStationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::OutStationRequest*
Arena::CreateMaybeMessage< ::stationerspace::OutStationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::OutStationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::stationerspace::StationerInfo*
Arena::CreateMaybeMessage< ::stationerspace::StationerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::stationerspace::StationerInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
